{
  "citations" : [ {
    "textCitation" : "[See sspwimpVD on Metamath](http://us.metamath.org/mpegif/sspwimpVD.html)"
  } ],
  "argumentText" : "ARGUMENT\nx\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_vex | |- x e. _V |\n| 2 | 1 | #P_vd01 | |- (. T. ->. x e. _V ). |\n| 3 |  | #P_idn1 | |- (. A C_ B ->. A C_ B ). |\n| 4 |  | #P_idn1 | |- (. x e. ~P A ->. x e. ~P A ). |\n| 5 |  | #P_elpwi | |- ( x e. ~P A -> x C_ A ) |\n| 6 | 4, 5 | #P_el1 | |- (. x e. ~P A ->. x C_ A ). |\n| 7 |  | #P_sstr | |- ( ( x C_ A /\\ A C_ B ) -> x C_ B ) |\n| 8 | 7 | #P_ancoms | |- ( ( A C_ B /\\ x C_ A ) -> x C_ B ) |\n| 9 | 3, 6, 8 | #P_el12 | |- (. (. A C_ B ,. x e. ~P A ). ->. x C_ B ). |\n| 10 | 2, 9 | #P_elpwgdedVD | |- (. (. T. ,. (. A C_ B ,. x e. ~P A ). ). ->. x e. ~P B ). |\n| 11 | 2, 9, 10 | #P_un0.1 | |- (. (. A C_ B ,. x e. ~P A ). ->. x e. ~P B ). |\n| 12 | 11 | #P_int2 | |- (. A C_ B ->. ( x e. ~P A -> x e. ~P B ) ). |\n| 13 | 12 | #P_gen11 | |- (. A C_ B ->. A. x ( x e. ~P A -> x e. ~P B ) ). |\n| 14 |  | #P_dfss2 | |- ( ~P A C_ ~P B <-> A. x ( x e. ~P A -> x e. ~P B ) ) |\n| 15 | 14 | #P_biimpri | |- ( A. x ( x e. ~P A -> x e. ~P B ) -> ~P A C_ ~P B ) |\n| 16 | 13, 15 | #P_el1 | |- (. A C_ B ->. ~P A C_ ~P B ). |\n| 17 | 16 | #P_in1 | |- ( A C_ B -> ~P A C_ ~P B ) |\n\\\n The following User's Proof is a Virtual Deduction proof (see ~ wvd1 ) using conjunction-form virtual hypothesis collections.  It was completed manually, but has the potential to be completed automatically by a tools program which would invoke Mel L. O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. ~ sspwimp is ~ sspwimpVD without virtual deductions and was derived from ~ sspwimpVD .  (Contributed by Alan Sare, 23-Apr-2015.) (Proof modification is discouraged.)  (New usage is discouraged.) <HTML> <TABLE> <TR> <TD> 1::    <TD> ` |- (.    A C_ B ->. A C_ B ). ` <TR> <TD> 2::    <TD> ` |- (. `  .............. ` x e. ~P A ` `->. x e. ~P A ). ` <TR> <TD> 3:2:   <TD> ` |- (. `  .............. ` x e. ~P A ` ` ->. x C_ A ). ` <TR> <TD> 4:3,1: <TD> ` |- (. (. A C_ B ,. x e. ~P A ). ->. x C_ B ). ` <TR> <TD> 5::    <TD> ` |- x e. _V ` <TR> <TD> 6:4,5: <TD> ` |- (. (. A C_ B ,. x e. ~P A ). ->. x e. ~P B ` ` ). ` <TR> <TD> 7:6:   <TD> ` |- (.    A C_ B ->. ( x e. ~P A -> x e. ~P B ) ` ` ). ` <TR> <TD> 8:7:   <TD> ` |- (.    A C_ B ->. A. x ( x e. ~P A -> x e. ` ` ~P B ) ). ` <TR> <TD> 9:8:   <TD> ` |- (.    A C_ B ->. ~P A C_ ~P B ). ` <TR> <TD> qed:9: <TD> ` |- ( A C_ B -> ~P A C_ ~P B ) ` </TABLE> </HTML> ",
  "conclusion" : "#P_sspwimp",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vx", "#T_vx.wal", "#T_wcel", "#T_cvv", "#T_wvd1--1", "#T_wtru", "#T_wvd1--2", "#T_vx.wal", "#T_wcel", "#T_cvv", "#T_wvd1--3", "#T_wvd1--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvd1--2", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvd1--3", "#T_wvd1--1", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvd1--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvd1--3", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_wvd1--1", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvd1--2", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_wvd1--3", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_wa", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wa", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cB.wceq", "#T_wvd1--1", "#T_wvhc2--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvhc2--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvhc2--3", "#T_wvd1--2", "#T_vx.wal", "#T_wss", "#T_cB.wceq", "#T_wvd1--3", "#T_wvd1--1", "#T_wvhc2--1", "#T_wtru", "#T_wvhc2--2", "#T_wvhc2--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvhc2--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvhc2--3", "#T_wvhc2--3", "#T_wvd1--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wvd1--3", "#T_wvd1--1", "#T_wvhc2--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvhc2--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wvhc2--3", "#T_wvd1--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wvd1--3", "#T_wvd1--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvd1--2", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wvd1--3", "#T_wvd1--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvd1--2", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wvd1--3", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_wb", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wi", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_wvd1--1", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wvd1--2", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_wvd1--3", "#T_cA", "#T_wss", "#T_cB", "#T_wi", "#T_cpw", "#T_cA", "#T_wss", "#T_cpw", "#T_cB" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_elpwgdedVD", "#P_gen11", "#P_biimpri", "#P_vd01", "#P_el12", "#P_elpwi", "#P_un0.1", "#P_el1", "#P_dfss2", "#P_in1", "#P_idn1", "#P_vex", "#P_int2", "#P_ancoms", "#P_sstr" ]
}