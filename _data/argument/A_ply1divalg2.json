{
  "citations" : [ {
    "textCitation" : "[See ply1divalg2 on Metamath](http://us.metamath.org/mpegif/ply1divalg2.html)"
  } ],
  "argumentText" : "ARGUMENT\nr\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | ply1divalg.p | |- P = ( Poly1 ` R ) |\n| 2 |  | ply1divalg.d | |- D = ( deg1 ` R ) |\n| 3 |  | ply1divalg.b | |- B = ( Base ` P ) |\n| 4 |  | ply1divalg.m | |- .- = ( -g ` P ) |\n| 5 |  | ply1divalg.z | |- .0. = ( 0g ` P ) |\n| 6 |  | ply1divalg.t | |- .xb = ( .r ` P ) |\n| 7 |  | ply1divalg.r1 | |- ( ph -> R e. Ring ) |\n| 8 |  | ply1divalg.f | |- ( ph -> F e. B ) |\n| 9 |  | ply1divalg.g1 | |- ( ph -> G e. B ) |\n| 10 |  | ply1divalg.g2 | |- ( ph -> G =/= .0. ) |\n| 11 |  | ply1divalg.g3 | |- ( ph -> ( ( coe1 ` G ) ` ( D ` G ) ) e. U ) |\n| 12 |  | ply1divalg.u | |- U = ( Unit ` R ) |\n| 13 |  | #P_eqid | |- ( Poly1 ` ( oppR ` R ) ) = ( Poly1 ` ( oppR ` R ) ) |\n| 14 |  | #P_eqidd | |- ( T. -> ( Base ` R ) = ( Base ` R ) ) |\n| 15 |  | #P_eqid | |- ( oppR ` R ) = ( oppR ` R ) |\n| 16 |  | #P_eqid | |- ( Base ` R ) = ( Base ` R ) |\n| 17 | 15, 16 | #P_opprbas | |- ( Base ` R ) = ( Base ` ( oppR ` R ) ) |\n| 18 | 17 | #P_a1i | |- ( T. -> ( Base ` R ) = ( Base ` ( oppR ` R ) ) ) |\n| 19 |  | #P_eqid | |- ( +g ` R ) = ( +g ` R ) |\n| 20 | 15, 19 | #P_oppradd | |- ( +g ` R ) = ( +g ` ( oppR ` R ) ) |\n| 21 | 20 | #P_oveqi | |- ( q ( +g ` R ) r ) = ( q ( +g ` ( oppR ` R ) ) r ) |\n| 22 | 21 | #P_a1i | |- ( ( T. /\\ ( q e. ( Base ` R ) /\\ r e. ( Base ` R ) ) ) -> ( q ( +g ` R ) r ) = ( q ( +g ` ( oppR ` R ) ) r ) ) |\n| 23 | 14, 18, 22 | #P_deg1propd | |- ( T. -> ( deg1 ` R ) = ( deg1 ` ( oppR ` R ) ) ) |\n| 24 | 23 | #P_trud | |- ( deg1 ` R ) = ( deg1 ` ( oppR ` R ) ) |\n| 25 | 2, 24 | #P_eqtri | |- D = ( deg1 ` ( oppR ` R ) ) |\n| 26 | 1 | #P_fveq2i | |- ( Base ` P ) = ( Base ` ( Poly1 ` R ) ) |\n| 27 | 14, 18, 22 | #P_ply1baspropd | |- ( T. -> ( Base ` ( Poly1 ` R ) ) = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 28 | 27 | #P_trud | |- ( Base ` ( Poly1 ` R ) ) = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 29 | 26, 28 | #P_eqtri | |- ( Base ` P ) = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 30 | 3, 29 | #P_eqtri | |- B = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 31 | 29 | #P_a1i | |- ( T. -> ( Base ` P ) = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 32 | 1 | #P_fveq2i | |- ( +g ` P ) = ( +g ` ( Poly1 ` R ) ) |\n| 33 | 14, 18, 22 | #P_ply1plusgpropd | |- ( T. -> ( +g ` ( Poly1 ` R ) ) = ( +g ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 34 | 33 | #P_trud | |- ( +g ` ( Poly1 ` R ) ) = ( +g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 35 | 32, 34 | #P_eqtri | |- ( +g ` P ) = ( +g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 36 | 35 | #P_a1i | |- ( T. -> ( +g ` P ) = ( +g ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 37 | 31, 36 | #P_grpsubpropd | |- ( T. -> ( -g ` P ) = ( -g ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 38 | 37 | #P_trud | |- ( -g ` P ) = ( -g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 39 | 4, 38 | #P_eqtri | |- .- = ( -g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 40 | 3 | #P_a1i | |- ( T. -> B = ( Base ` P ) ) |\n| 41 | 30 | #P_a1i | |- ( T. -> B = ( Base ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 42 | 35 | #P_oveqi | |- ( q ( +g ` P ) r ) = ( q ( +g ` ( Poly1 ` ( oppR ` R ) ) ) r ) |\n| 43 | 42 | #P_a1i | |- ( ( T. /\\ ( q e. B /\\ r e. B ) ) -> ( q ( +g ` P ) r ) = ( q ( +g ` ( Poly1 ` ( oppR ` R ) ) ) r ) ) |\n| 44 | 40, 41, 43 | #P_grpidpropd | |- ( T. -> ( 0g ` P ) = ( 0g ` ( Poly1 ` ( oppR ` R ) ) ) ) |\n| 45 | 44 | #P_trud | |- ( 0g ` P ) = ( 0g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 46 | 5, 45 | #P_eqtri | |- .0. = ( 0g ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 47 |  | #P_eqid | |- ( .r ` ( Poly1 ` ( oppR ` R ) ) ) = ( .r ` ( Poly1 ` ( oppR ` R ) ) ) |\n| 48 | 15 | #P_opprring | |- ( R e. Ring -> ( oppR ` R ) e. Ring ) |\n| 49 | 7, 48 | #P_syl | |- ( ph -> ( oppR ` R ) e. Ring ) |\n| 50 | 12, 15 | #P_opprunit | |- U = ( Unit ` ( oppR ` R ) ) |\n| 51 | 13, 25, 30, 39, 46, 47, 49, 8, 9, 10, 11, 50 | #P_ply1divalg | |- ( ph -> E! q e. B ( D ` ( F .- ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) ) < ( D ` G ) ) |\n| 52 | 7 | #P_adantr | |- ( ( ph /\\ q e. B ) -> R e. Ring ) |\n| 53 | 9 | #P_adantr | |- ( ( ph /\\ q e. B ) -> G e. B ) |\n| 54 |  | #P_simpr | |- ( ( ph /\\ q e. B ) -> q e. B ) |\n| 55 | 1, 15, 13, 6, 47, 3 | #P_ply1opprmul | |- ( ( R e. Ring /\\ G e. B /\\ q e. B ) -> ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) = ( q .xb G ) ) |\n| 56 | 52, 53, 54, 55 | #P_syl3anc | |- ( ( ph /\\ q e. B ) -> ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) = ( q .xb G ) ) |\n| 57 | 56 | #P_eqcomd | |- ( ( ph /\\ q e. B ) -> ( q .xb G ) = ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) |\n| 58 | 57 | #P_oveq2d | |- ( ( ph /\\ q e. B ) -> ( F .- ( q .xb G ) ) = ( F .- ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) ) |\n| 59 | 58 | #P_fveq2d | |- ( ( ph /\\ q e. B ) -> ( D ` ( F .- ( q .xb G ) ) ) = ( D ` ( F .- ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) ) ) |\n| 60 | 59 | #P_breq1d | |- ( ( ph /\\ q e. B ) -> ( ( D ` ( F .- ( q .xb G ) ) ) < ( D ` G ) <-> ( D ` ( F .- ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) ) < ( D ` G ) ) ) |\n| 61 | 60 | #P_reubidva | |- ( ph -> ( E! q e. B ( D ` ( F .- ( q .xb G ) ) ) < ( D ` G ) <-> E! q e. B ( D ` ( F .- ( G ( .r ` ( Poly1 ` ( oppR ` R ) ) ) q ) ) ) < ( D ` G ) ) ) |\n| 62 | 51, 61 | #P_mpbird | |- ( ph -> E! q e. B ( D ` ( F .- ( q .xb G ) ) ) < ( D ` G ) ) |",
  "conclusion" : "#P_ply1divalg2",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vr", "#T_cP", "#T_wceq", "#T_cpl1", "#T_cfv", "#T_cR", "#T_cD", "#T_wceq", "#T_cdg1", "#T_cfv", "#T_cR", "#T_cB", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cP", "#T_c.mi", "#T_wceq", "#T_csg", "#T_cfv", "#T_cP", "#T_c.0", "#T_wceq", "#T_c0g", "#T_cfv", "#T_cP", "#T_c.xb", "#T_wceq", "#T_cmulr", "#T_cfv", "#T_cP", "#T_wph", "#T_wi", "#T_cR", "#T_wcel", "#T_crg", "#T_wph", "#T_wi", "#T_cF", "#T_wcel", "#T_cB", "#T_wph", "#T_wi", "#T_cG", "#T_wcel", "#T_cB", "#T_wph", "#T_wi", "#T_cG", "#T_wne", "#T_c.0", "#T_wph", "#T_wi", "#T_cco1", "#T_cfv", "#T_cG", "#T_cfv", "#T_cD", "#T_cfv", "#T_cG", "#T_wcel", "#T_cU", "#T_cU", "#T_wceq", "#T_cui", "#T_cfv", "#T_cR", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wceq", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cbs", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cR", "#T_coppr", "#T_cfv", "#T_cR", "#T_wceq", "#T_coppr", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cbs", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cplusg", "#T_cfv", "#T_cR", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cR", "#T_cplusg", "#T_cfv", "#T_cR", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cR", "#T_vr", "#T_wceq", "#T_vq", "#T_cplusg", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vr", "#T_wtru", "#T_wa", "#T_vq", "#T_wcel", "#T_cbs", "#T_cfv", "#T_cR", "#T_wa", "#T_vr", "#T_wcel", "#T_cbs", "#T_cfv", "#T_cR", "#T_wi", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cR", "#T_vr", "#T_wceq", "#T_vq", "#T_cplusg", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vr", "#T_wtru", "#T_wi", "#T_cdg1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cdg1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cdg1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cdg1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cD", "#T_wceq", "#T_cdg1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_cP", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_cP", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cB.wceq", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cbs", "#T_cfv", "#T_cP", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cplusg", "#T_cfv", "#T_cP", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_cR", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cplusg", "#T_cfv", "#T_cP", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cplusg", "#T_cfv", "#T_cP", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_csg", "#T_cfv", "#T_cP", "#T_wceq", "#T_csg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_csg", "#T_cfv", "#T_cP", "#T_wceq", "#T_csg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_c.mi", "#T_wceq", "#T_csg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wtru", "#T_wi", "#T_cB.wceq", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cP", "#T_wtru", "#T_wi", "#T_cB.wceq", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cP", "#T_vr", "#T_wceq", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vr", "#T_wtru", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wa", "#T_vr", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cP", "#T_vr", "#T_wceq", "#T_vq", "#T_cplusg", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vr", "#T_wtru", "#T_wi", "#T_c0g", "#T_cfv", "#T_cP", "#T_wceq", "#T_c0g", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_c0g", "#T_cfv", "#T_cP", "#T_wceq", "#T_c0g", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_c.0", "#T_wceq", "#T_c0g", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wceq", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_cR", "#T_wcel", "#T_crg", "#T_wi", "#T_coppr", "#T_cfv", "#T_cR", "#T_wcel", "#T_crg", "#T_wph", "#T_wi", "#T_coppr", "#T_cfv", "#T_cR", "#T_wcel", "#T_crg", "#T_cU", "#T_wceq", "#T_cui", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_wreu--1", "#T_vq", "#T_wreu--2", "#T_cB.wceq", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_clt", "#T_cD", "#T_cfv", "#T_cG", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cR", "#T_wcel", "#T_crg", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cG", "#T_wcel", "#T_cB.wceq", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_cR", "#T_wcel", "#T_crg", "#T_w3a--1", "#T_cG", "#T_wcel", "#T_cB.wceq", "#T_w3a--2", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_wceq", "#T_vq", "#T_c.xb", "#T_cG", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_wceq", "#T_vq", "#T_c.xb", "#T_cG", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_vq", "#T_c.xb", "#T_cG", "#T_wceq", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cF", "#T_c.mi", "#T_vq", "#T_c.xb", "#T_cG", "#T_wceq", "#T_cF", "#T_c.mi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_vq", "#T_c.xb", "#T_cG", "#T_wceq", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_wph", "#T_wa", "#T_vq", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_vq", "#T_c.xb", "#T_cG", "#T_clt", "#T_cD", "#T_cfv", "#T_cG", "#T_wb", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_clt", "#T_cD", "#T_cfv", "#T_cG", "#T_wph", "#T_wi", "#T_wreu--1", "#T_vq", "#T_wreu--2", "#T_cB.wceq", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_vq", "#T_c.xb", "#T_cG", "#T_clt", "#T_cD", "#T_cfv", "#T_cG", "#T_wb", "#T_wreu--1", "#T_vq", "#T_wreu--2", "#T_cB.wceq", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_cG", "#T_cmulr", "#T_cfv", "#T_cpl1", "#T_cfv", "#T_coppr", "#T_cfv", "#T_cR", "#T_vq", "#T_clt", "#T_cD", "#T_cfv", "#T_cG", "#T_wph", "#T_wi", "#T_wreu--1", "#T_vq", "#T_wreu--2", "#T_cB", "#T_cD", "#T_cfv", "#T_cF", "#T_c.mi", "#T_vq", "#T_c.xb", "#T_cG", "#T_clt", "#T_cD", "#T_cfv", "#T_cG" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_fveq2i", "#P_grpsubpropd", "#P_ply1opprmul", "#P_fveq2d", "#P_eqcomd", "#P_a1i", "#P_opprunit", "#P_reubidva", "#P_mpbird", "#P_eqid", "#P_opprbas", "#P_trud", "#P_eqtri", "#P_opprring", "#P_eqidd", "#P_deg1propd", "#P_syl", "#P_grpidpropd", "#P_breq1d", "#P_ply1divalg", "#P_adantr", "#P_oppradd", "#P_ply1baspropd", "#P_oveqi", "#P_oveq2d", "#P_syl3anc", "#P_ply1plusgpropd", "#P_simpr" ]
}