{
  "citations" : [ {
    "textCitation" : "[See sspwimpALT on Metamath](http://us.metamath.org/mpegif/sspwimpALT.html)"
  } ],
  "argumentText" : "ARGUMENT\nx\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_vex | |- x e. _V |\n| 2 | 1 | #P_a1i | |- ( T. -> x e. _V ) |\n| 3 |  | #P_id | |- ( x e. ~P A -> x e. ~P A ) |\n| 4 |  | #P_elpwi | |- ( x e. ~P A -> x C_ A ) |\n| 5 | 3, 4 | #P_syl | |- ( x e. ~P A -> x C_ A ) |\n| 6 |  | #P_id | |- ( A C_ B -> A C_ B ) |\n| 7 | 5, 6 | #P_sylan9ssr | |- ( ( A C_ B /\\ x e. ~P A ) -> x C_ B ) |\n| 8 | 2, 7 | #P_elpwgded | |- ( ( T. /\\ ( A C_ B /\\ x e. ~P A ) ) -> x e. ~P B ) |\n| 9 | 8 | #P_uunT1 | |- ( ( A C_ B /\\ x e. ~P A ) -> x e. ~P B ) |\n| 10 | 9 | #P_ex | |- ( A C_ B -> ( x e. ~P A -> x e. ~P B ) ) |\n| 11 | 10 | #P_alrimiv | |- ( A C_ B -> A. x ( x e. ~P A -> x e. ~P B ) ) |\n| 12 |  | #P_dfss2 | |- ( ~P A C_ ~P B <-> A. x ( x e. ~P A -> x e. ~P B ) ) |\n| 13 | 12 | #P_biimpri | |- ( A. x ( x e. ~P A -> x e. ~P B ) -> ~P A C_ ~P B ) |\n| 14 | 11, 13 | #P_syl | |- ( A C_ B -> ~P A C_ ~P B ) |\n| 15 | 14 | #P_idi | |- ( A C_ B -> ~P A C_ ~P B ) |\n\\\n If a class is a subclass of another class, then its power class is a subclass of that other class's power class.  Left-to-right implication of Exercise 18 of [TakeutiZaring] p. 18. ~ sspwimpALT is the completed proof in conventional notation of the Virtual Deduction proof ~ http://us.metamath.org/other/completeusersproof/sspwimpaltvd.html . It was completed manually.  The potential for automated derivation from the VD proof exists.  See ~ wvd1 for a description of Virtual Deduction.  Some sub-theorems of the proof were completed using a unification deduction ( e.g. , the sub-theorem whose assertion is step 9 used ~ elpwgded ).  Unification deductions employ Mario Carneiro's metavariable concept.  Some sub-theorems were completed using a unification theorem ( e.g. , the sub-theorem whose assertion is step 5 used ~ elpwi ) .  (Contributed by Alan Sare, 3-Dec-2015.) (Proof modification is discouraged.)  (New usage is discouraged.) ",
  "conclusion" : "#P_sspwimp",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vx", "#T_vx.wal", "#T_wcel", "#T_cvv", "#T_wtru", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cvv", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wi", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wss", "#T_cB.wceq", "#T_wtru", "#T_wa", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wi", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_wb", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cpw", "#T_cB.wceq", "#T_wi", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_cA.wceq", "#T_wss", "#T_cB.wceq", "#T_wi", "#T_cpw", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cB.wceq", "#T_cA", "#T_wss", "#T_cB", "#T_wi", "#T_cpw", "#T_cA", "#T_wss", "#T_cpw", "#T_cB" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_sylan9ssr", "#P_uunT1", "#P_a1i", "#P_elpwgded", "#P_biimpri", "#P_idi", "#P_elpwi", "#P_ex", "#P_dfss2", "#P_syl", "#P_vex", "#P_alrimiv", "#P_id" ]
}