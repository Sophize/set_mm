{
  "citations" : [ {
    "textCitation" : "[See lvecindp on Metamath](http://us.metamath.org/mpegif/lvecindp.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | lvecindp.v | |- V = ( Base ` W ) |\n| 2 |  | lvecindp.p | |- .+ = ( +g ` W ) |\n| 3 |  | lvecindp.f | |- F = ( Scalar ` W ) |\n| 4 |  | lvecindp.k | |- K = ( Base ` F ) |\n| 5 |  | lvecindp.t | |- .x. = ( .s ` W ) |\n| 6 |  | lvecindp.s | |- S = ( LSubSp ` W ) |\n| 7 |  | lvecindp.w | |- ( ph -> W e. LVec ) |\n| 8 |  | lvecindp.u | |- ( ph -> U e. S ) |\n| 9 |  | lvecindp.x | |- ( ph -> X e. V ) |\n| 10 |  | lvecindp.n | |- ( ph -> -. X e. U ) |\n| 11 |  | lvecindp.y | |- ( ph -> Y e. U ) |\n| 12 |  | lvecindp.z | |- ( ph -> Z e. U ) |\n| 13 |  | lvecindp.a | |- ( ph -> A e. K ) |\n| 14 |  | lvecindp.b | |- ( ph -> B e. K ) |\n| 15 |  | lvecindp.e | |- ( ph -> ( ( A .x. X ) .+ Y ) = ( ( B .x. X ) .+ Z ) ) |\n| 16 |  | #P_eqid | |- ( 0g ` W ) = ( 0g ` W ) |\n| 17 |  | #P_eqid | |- ( Cntz ` W ) = ( Cntz ` W ) |\n| 18 |  | #P_lveclmod | |- ( W e. LVec -> W e. LMod ) |\n| 19 | 7, 18 | #P_syl | |- ( ph -> W e. LMod ) |\n| 20 |  | #P_eqid | |- ( LSpan ` W ) = ( LSpan ` W ) |\n| 21 | 1, 20 | #P_lspsnsubg | |- ( ( W e. LMod /\\ X e. V ) -> ( ( LSpan ` W ) ` { X } ) e. ( SubGrp ` W ) ) |\n| 22 | 19, 9, 21 | #P_syl2anc | |- ( ph -> ( ( LSpan ` W ) ` { X } ) e. ( SubGrp ` W ) ) |\n| 23 | 6 | #P_lsssssubg | |- ( W e. LMod -> S C_ ( SubGrp ` W ) ) |\n| 24 | 19, 23 | #P_syl | |- ( ph -> S C_ ( SubGrp ` W ) ) |\n| 25 | 24, 8 | #P_sseldd | |- ( ph -> U e. ( SubGrp ` W ) ) |\n| 26 | 1, 16, 20, 6, 7, 8, 9, 10 | #P_lspdisj | |- ( ph -> ( ( ( LSpan ` W ) ` { X } ) i^i U ) = { ( 0g ` W ) } ) |\n| 27 |  | #P_lmodabl | |- ( W e. LMod -> W e. Abel ) |\n| 28 | 19, 27 | #P_syl | |- ( ph -> W e. Abel ) |\n| 29 | 17, 28, 22, 25 | #P_ablcntzd | |- ( ph -> ( ( LSpan ` W ) ` { X } ) C_ ( ( Cntz ` W ) ` U ) ) |\n| 30 | 1, 5, 3, 4, 20, 19, 13, 9 | #P_lspsneli | |- ( ph -> ( A .x. X ) e. ( ( LSpan ` W ) ` { X } ) ) |\n| 31 | 1, 5, 3, 4, 20, 19, 14, 9 | #P_lspsneli | |- ( ph -> ( B .x. X ) e. ( ( LSpan ` W ) ` { X } ) ) |\n| 32 | 2, 16, 17, 22, 25, 26, 29, 30, 31, 11, 12, 15 | #P_subgdisj1 | |- ( ph -> ( A .x. X ) = ( B .x. X ) ) |\n| 33 | 1, 16, 6, 19, 8, 9, 10 | #P_lssneln0 | |- ( ph -> X e. ( V \\ { ( 0g ` W ) } ) ) |\n| 34 |  | #P_eldifsni | |- ( X e. ( V \\ { ( 0g ` W ) } ) -> X =/= ( 0g ` W ) ) |\n| 35 | 33, 34 | #P_syl | |- ( ph -> X =/= ( 0g ` W ) ) |\n| 36 | 1, 5, 3, 4, 16, 7, 13, 14, 9, 35 | #P_lvecvscan2 | |- ( ph -> ( ( A .x. X ) = ( B .x. X ) <-> A = B ) ) |\n| 37 | 32, 36 | #P_mpbid | |- ( ph -> A = B ) |\n| 38 | 2, 16, 17, 22, 25, 26, 29, 30, 31, 11, 12, 15 | #P_subgdisj2 | |- ( ph -> Y = Z ) |\n| 39 | 37, 38 | #P_jca | |- ( ph -> ( A = B /\\ Y = Z ) ) |",
  "conclusion" : "#P_lvecindp",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cV", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cW", "#T_c.pl", "#T_wceq", "#T_cplusg", "#T_cfv", "#T_cW", "#T_cF", "#T_wceq", "#T_csca", "#T_cfv", "#T_cW", "#T_cK", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cF", "#T_c.x", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_cW", "#T_cS", "#T_wceq", "#T_clss", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_cW", "#T_wcel", "#T_clvec", "#T_wph", "#T_wi", "#T_cU", "#T_wcel", "#T_cS", "#T_wph", "#T_wi", "#T_cX", "#T_wcel", "#T_cV", "#T_wph", "#T_wi", "#T_wn", "#T_cX", "#T_wcel", "#T_cU", "#T_wph", "#T_wi", "#T_cY", "#T_wcel", "#T_cU", "#T_wph", "#T_wi", "#T_cZ", "#T_wcel", "#T_cU", "#T_wph", "#T_wi", "#T_cA", "#T_wcel", "#T_cK", "#T_wph", "#T_wi", "#T_cB", "#T_wcel", "#T_cK", "#T_wph", "#T_wi", "#T_cA", "#T_c.x", "#T_cX", "#T_c.pl", "#T_cY", "#T_wceq", "#T_cB", "#T_c.x", "#T_cX", "#T_c.pl", "#T_cZ", "#T_c0g", "#T_cfv", "#T_cW", "#T_wceq", "#T_c0g", "#T_cfv", "#T_cW", "#T_ccntz", "#T_cfv", "#T_cW", "#T_wceq", "#T_ccntz", "#T_cfv", "#T_cW", "#T_cW", "#T_wcel", "#T_clvec", "#T_wi", "#T_cW", "#T_wcel", "#T_clmod", "#T_wph", "#T_wi", "#T_cW", "#T_wcel", "#T_clmod", "#T_clspn", "#T_cfv", "#T_cW", "#T_wceq", "#T_clspn", "#T_cfv", "#T_cW", "#T_cW", "#T_wcel", "#T_clmod", "#T_wa", "#T_cX", "#T_wcel", "#T_cV", "#T_wi", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_wcel", "#T_csubg", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_wcel", "#T_csubg", "#T_cfv", "#T_cW", "#T_cW", "#T_wcel", "#T_clmod", "#T_wi", "#T_cS", "#T_wss", "#T_csubg", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_cS", "#T_wss", "#T_csubg", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_cU", "#T_wcel", "#T_csubg", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_cin", "#T_cU", "#T_wceq", "#T_csn--1", "#T_c0g", "#T_cfv", "#T_cW", "#T_csn--2", "#T_cW", "#T_wcel", "#T_clmod", "#T_wi", "#T_cW", "#T_wcel", "#T_cabl", "#T_wph", "#T_wi", "#T_cW", "#T_wcel", "#T_cabl", "#T_wph", "#T_wi", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_wss", "#T_ccntz", "#T_cfv", "#T_cW", "#T_cfv", "#T_cU", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_c.x", "#T_cX", "#T_wcel", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_wph", "#T_wi", "#T_cB.wceq", "#T_c.x", "#T_cX", "#T_wcel", "#T_clspn", "#T_cfv", "#T_cW", "#T_cfv", "#T_csn--1", "#T_cX", "#T_csn--2", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_c.x", "#T_cX", "#T_wceq", "#T_cB.wceq", "#T_c.x", "#T_cX", "#T_wph", "#T_wi", "#T_cX", "#T_wcel", "#T_cV", "#T_cdif", "#T_csn--1", "#T_c0g", "#T_cfv", "#T_cW", "#T_csn--2", "#T_cX", "#T_wcel", "#T_cV", "#T_cdif", "#T_csn--1", "#T_c0g", "#T_cfv", "#T_cW", "#T_csn--2", "#T_wi", "#T_cX", "#T_wne", "#T_c0g", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_cX", "#T_wne", "#T_c0g", "#T_cfv", "#T_cW", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_c.x", "#T_cX", "#T_wceq", "#T_cB.wceq", "#T_c.x", "#T_cX", "#T_wb", "#T_cA.wceq", "#T_wceq", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_wceq", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_cY", "#T_wceq", "#T_cZ", "#T_wph", "#T_wi", "#T_cA", "#T_wceq", "#T_cB", "#T_wa", "#T_cY", "#T_wceq", "#T_cZ" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_mpbid", "#P_lspdisj", "#P_lvecvscan2", "#P_lveclmod", "#P_lmodabl", "#P_eqid", "#P_sseldd", "#P_syl2anc", "#P_eldifsni", "#P_syl", "#P_ablcntzd", "#P_lspsnsubg", "#P_jca", "#P_lsssssubg", "#P_subgdisj1", "#P_lssneln0", "#P_lspsneli", "#P_subgdisj2" ]
}