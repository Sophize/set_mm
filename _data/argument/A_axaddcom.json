{
  "citations" : [ {
    "textCitation" : "[See axaddcom on Metamath](http://us.metamath.org/mpegif/axaddcom.html)"
  } ],
  "argumentText" : "ARGUMENT\nw x y z\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_df-c | |- CC = ( R. X. R. ) |\n| 2 |  | #P_oveq1 | |- ( <. x , y >. = A -> ( <. x , y >. + <. z , w >. ) = ( A + <. z , w >. ) ) |\n| 3 |  | #P_oveq2 | |- ( <. x , y >. = A -> ( <. z , w >. + <. x , y >. ) = ( <. z , w >. + A ) ) |\n| 4 | 2, 3 | #P_eqeq12d | |- ( <. x , y >. = A -> ( ( <. x , y >. + <. z , w >. ) = ( <. z , w >. + <. x , y >. ) <-> ( A + <. z , w >. ) = ( <. z , w >. + A ) ) ) |\n| 5 |  | #P_oveq2 | |- ( <. z , w >. = B -> ( A + <. z , w >. ) = ( A + B ) ) |\n| 6 |  | #P_oveq1 | |- ( <. z , w >. = B -> ( <. z , w >. + A ) = ( B + A ) ) |\n| 7 | 5, 6 | #P_eqeq12d | |- ( <. z , w >. = B -> ( ( A + <. z , w >. ) = ( <. z , w >. + A ) <-> ( A + B ) = ( B + A ) ) ) |\n| 8 |  | #P_addcomsrg | |- ( ( x e. R. /\\ z e. R. ) -> ( x +R z ) = ( z +R x ) ) |\n| 9 | 8 | #P_ad2ant2r | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> ( x +R z ) = ( z +R x ) ) |\n| 10 |  | #P_addcomsrg | |- ( ( y e. R. /\\ w e. R. ) -> ( y +R w ) = ( w +R y ) ) |\n| 11 | 10 | #P_ad2ant2l | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> ( y +R w ) = ( w +R y ) ) |\n| 12 | 9, 11 | #P_opeq12d | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> <. ( x +R z ) , ( y +R w ) >. = <. ( z +R x ) , ( w +R y ) >. ) |\n| 13 |  | #P_addcnsr | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> ( <. x , y >. + <. z , w >. ) = <. ( x +R z ) , ( y +R w ) >. ) |\n| 14 |  | #P_addcnsr | |- ( ( ( z e. R. /\\ w e. R. ) /\\ ( x e. R. /\\ y e. R. ) ) -> ( <. z , w >. + <. x , y >. ) = <. ( z +R x ) , ( w +R y ) >. ) |\n| 15 | 14 | #P_ancoms | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> ( <. z , w >. + <. x , y >. ) = <. ( z +R x ) , ( w +R y ) >. ) |\n| 16 | 12, 13, 15 | #P_3eqtr4d | |- ( ( ( x e. R. /\\ y e. R. ) /\\ ( z e. R. /\\ w e. R. ) ) -> ( <. x , y >. + <. z , w >. ) = ( <. z , w >. + <. x , y >. ) ) |\n| 17 | 1, 4, 7, 16 | #P_2optocl | |- ( ( A e. CC /\\ B e. CC ) -> ( A + B ) = ( B + A ) ) |\n\\\n Addition commutes.  Axiom for real and complex numbers, derived from set theory.  This construction-dependent theorem should not be referenced directly, nor should the proven axiom ~ ax-addcom be used later. Instead, use ~ addcom . In the Metamath Proof Explorer this is not a complex number axiom but is instead proved from other axioms.  That proof relies on real number trichotomy and it is not known whether it is possible to prove this from the other axioms without it.  (Contributed by Jim Kingdon, 17-Jan-2020.)  (New usage is discouraged.) ",
  "conclusion" : "#P_addcom",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vw", "#T_vx", "#T_vy", "#T_vz", "#T_cc", "#T_wceq", "#T_cnr", "#T_cxp", "#T_cnr", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cA.wceq", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wb", "#T_cA.wceq", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cA.wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cB.wceq", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_cB.wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cB.wceq", "#T_wi", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cA.wceq", "#T_wceq", "#T_cB.wceq", "#T_caddc", "#T_cA.wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cB.wceq", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cA.wceq", "#T_wb", "#T_cA.wceq", "#T_caddc", "#T_cB.wceq", "#T_wceq", "#T_cB.wceq", "#T_caddc", "#T_cA.wceq", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wi", "#T_vx.wal", "#T_cplr", "#T_vz", "#T_wceq", "#T_vz", "#T_cplr", "#T_vx.wal", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_vx.wal", "#T_cplr", "#T_vz", "#T_wceq", "#T_vz", "#T_cplr", "#T_vx.wal", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_vy.tru", "#T_cplr", "#T_vw", "#T_wceq", "#T_vw", "#T_cplr", "#T_vy.tru", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_vy.tru", "#T_cplr", "#T_vw", "#T_wceq", "#T_vw", "#T_cplr", "#T_vy.tru", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_cop--1", "#T_vx.wal", "#T_cplr", "#T_vz", "#T_cop--2", "#T_vy.tru", "#T_cplr", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cplr", "#T_vx.wal", "#T_cop--2", "#T_vw", "#T_cplr", "#T_vy.tru", "#T_cop--3", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vx.wal", "#T_cplr", "#T_vz", "#T_cop--2", "#T_vy.tru", "#T_cplr", "#T_vw", "#T_cop--3", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wi", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cplr", "#T_vx.wal", "#T_cop--2", "#T_vw", "#T_cplr", "#T_vy.tru", "#T_cop--3", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cplr", "#T_vx.wal", "#T_cop--2", "#T_vw", "#T_cplr", "#T_vy.tru", "#T_cop--3", "#T_vx.wal", "#T_wcel", "#T_cnr", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cnr", "#T_wa", "#T_vz", "#T_wcel", "#T_cnr", "#T_wa", "#T_vw", "#T_wcel", "#T_cnr", "#T_wi", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_wceq", "#T_cop--1", "#T_vz", "#T_cop--2", "#T_vw", "#T_cop--3", "#T_caddc", "#T_cop--1", "#T_vx.wal", "#T_cop--2", "#T_vy.tru", "#T_cop--3", "#T_cA", "#T_wcel", "#T_cc", "#T_wa", "#T_cB", "#T_wcel", "#T_cc", "#T_wi", "#T_cA", "#T_caddc", "#T_cB", "#T_wceq", "#T_cB", "#T_caddc", "#T_cA" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_eqeq12d", "#P_ad2ant2r", "#P_addcomsrg", "#P_addcnsr", "#P_oveq2", "#P_opeq12d", "#P_oveq1", "#P_3eqtr4d", "#P_2optocl", "#P_df-c", "#P_ancoms", "#P_ad2ant2l" ]
}