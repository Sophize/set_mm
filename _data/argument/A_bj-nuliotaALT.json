{
  "citations" : [ {
    "textCitation" : "[See bj-nuliotaALT on Metamath](http://us.metamath.org/mpegif/bj-nuliotaALT.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_0ss | |- (/) C_ ( iota x A. y -. y e. x ) |\n| 2 |  | #P_iotassuni | |- ( iota x A. y -. y e. x ) C_ U. { x | A. y -. y e. x } |\n| 3 |  | #P_eq0 | |- ( x = (/) <-> A. y -. y e. x ) |\n| 4 | 3 | #P_bicomi | |- ( A. y -. y e. x <-> x = (/) ) |\n| 5 | 4 | #P_abbii | |- { x | A. y -. y e. x } = { x | x = (/) } |\n| 6 | 5 | #P_unieqi | |- U. { x | A. y -. y e. x } = U. { x | x = (/) } |\n| 7 |  | #P_df-sn | |- { (/) } = { x | x = (/) } |\n| 8 | 7 | #P_eqcomi | |- { x | x = (/) } = { (/) } |\n| 9 | 8 | #P_unieqi | |- U. { x | x = (/) } = U. { (/) } |\n| 10 |  | #P_0ex | |- (/) e. _V |\n| 11 | 10 | #P_unisn | |- U. { (/) } = (/) |\n| 12 | 6, 9, 11 | #P_3eqtri | |- U. { x | A. y -. y e. x } = (/) |\n| 13 | 2, 12 | #P_sseqtri | |- ( iota x A. y -. y e. x ) C_ (/) |\n| 14 | 1, 13 | #P_eqssi | |- (/) = ( iota x A. y -. y e. x ) |\n\\\n Alternate proof of ~ bj-nuliota .  Note that this alternate proof uses the fact that ` iota x ph ` evaluates to ` (/) ` when there is no ` x ` satisfying ` ph ` (~ iotanul ).  This is an implementation detail of the encoding currently used in set.mm and should be avoided.  (Contributed by BJ, 30-Nov-2019.)  (Proof modification is discouraged.) (New usage is discouraged.) ",
  "conclusion" : "#P_bj-nuliota",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_c0", "#T_wss", "#T_cio", "#T_vx.wal", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_cio", "#T_vx.wal", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_wss", "#T_cuni", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_cab--3", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_wb", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_wb", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_cab--3", "#T_wceq", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--3", "#T_cuni", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_cab--3", "#T_wceq", "#T_cuni", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--3", "#T_csn--1", "#T_c0", "#T_csn--2", "#T_wceq", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--3", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--3", "#T_wceq", "#T_csn--1", "#T_c0", "#T_csn--2", "#T_cuni", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_vx.wal", "#T_wceq", "#T_c0", "#T_cab--3", "#T_wceq", "#T_cuni", "#T_csn--1", "#T_c0", "#T_csn--2", "#T_c0", "#T_wcel", "#T_cvv", "#T_cuni", "#T_csn--1", "#T_c0", "#T_csn--2", "#T_wceq", "#T_c0", "#T_cuni", "#T_cab--1", "#T_vx.wal", "#T_cab--2", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_cab--3", "#T_wceq", "#T_c0", "#T_cio", "#T_vx.wal", "#T_wal", "#T_vy.tru", "#T_wn", "#T_vy.tru", "#T_wcel", "#T_vx.wal", "#T_wss", "#T_c0", "#T_c0", "#T_wceq", "#T_cio", "#T_vx", "#T_wal", "#T_vy", "#T_wn", "#T_vy", "#T_wcel", "#T_vx" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_unisn", "#P_sseqtri", "#P_3eqtri", "#P_eqcomi", "#P_unieqi", "#P_0ss", "#P_iotassuni", "#P_abbii", "#P_eqssi", "#P_bicomi", "#P_df-sn", "#P_0ex", "#P_eq0" ]
}