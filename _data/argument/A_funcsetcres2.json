{
  "citations" : [ {
    "textCitation" : "[See funcsetcres2 on Metamath](http://us.metamath.org/mpegif/funcsetcres2.html)"
  } ],
  "argumentText" : "ARGUMENT\nf\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | resssetc.c | |- C = ( SetCat ` U ) |\n| 2 |  | resssetc.d | |- D = ( SetCat ` V ) |\n| 3 |  | resssetc.1 | |- ( ph -> U e. W ) |\n| 4 |  | resssetc.2 | |- ( ph -> V C_ U ) |\n| 5 |  | #P_eqidd | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( Homf ` E ) = ( Homf ` E ) ) |\n| 6 |  | #P_eqidd | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( comf ` E ) = ( comf ` E ) ) |\n| 7 |  | #P_eqid | |- ( Base ` C ) = ( Base ` C ) |\n| 8 |  | #P_eqid | |- ( Homf ` C ) = ( Homf ` C ) |\n| 9 | 1 | #P_setccat | |- ( U e. W -> C e. Cat ) |\n| 10 | 3, 9 | #P_syl | |- ( ph -> C e. Cat ) |\n| 11 | 10 | #P_adantr | |- ( ( ph /\\ f e. ( E Func D ) ) -> C e. Cat ) |\n| 12 | 1, 3 | #P_setcbas | |- ( ph -> U = ( Base ` C ) ) |\n| 13 | 4, 12 | #P_sseqtrd | |- ( ph -> V C_ ( Base ` C ) ) |\n| 14 | 13 | #P_adantr | |- ( ( ph /\\ f e. ( E Func D ) ) -> V C_ ( Base ` C ) ) |\n| 15 |  | #P_eqid | |- ( C |`s V ) = ( C |`s V ) |\n| 16 |  | #P_eqid | |- ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) = ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) |\n| 17 | 7, 8, 11, 14, 15, 16 | #P_fullresc | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( ( Homf ` ( C |`s V ) ) = ( Homf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) /\\ ( comf ` ( C |`s V ) ) = ( comf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) ) ) |\n| 18 | 17 | #P_simpld | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( Homf ` ( C |`s V ) ) = ( Homf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) ) |\n| 19 | 1, 2, 3, 4 | #P_resssetc | |- ( ph -> ( ( Homf ` ( C |`s V ) ) = ( Homf ` D ) /\\ ( comf ` ( C |`s V ) ) = ( comf ` D ) ) ) |\n| 20 | 19 | #P_adantr | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( ( Homf ` ( C |`s V ) ) = ( Homf ` D ) /\\ ( comf ` ( C |`s V ) ) = ( comf ` D ) ) ) |\n| 21 | 20 | #P_simpld | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( Homf ` ( C |`s V ) ) = ( Homf ` D ) ) |\n| 22 | 18, 21 | #P_eqtr3d | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( Homf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) = ( Homf ` D ) ) |\n| 23 | 17 | #P_simprd | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( comf ` ( C |`s V ) ) = ( comf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) ) |\n| 24 | 20 | #P_simprd | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( comf ` ( C |`s V ) ) = ( comf ` D ) ) |\n| 25 | 23, 24 | #P_eqtr3d | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( comf ` ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) = ( comf ` D ) ) |\n| 26 |  | #P_funcrcl | |- ( f e. ( E Func D ) -> ( E e. Cat /\\ D e. Cat ) ) |\n| 27 | 26 | #P_adantl | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( E e. Cat /\\ D e. Cat ) ) |\n| 28 | 27 | #P_simpld | |- ( ( ph /\\ f e. ( E Func D ) ) -> E e. Cat ) |\n| 29 | 7, 8, 11, 14 | #P_fullsubc | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( ( Homf ` C ) |` ( V X. V ) ) e. ( Subcat ` C ) ) |\n| 30 | 16, 29 | #P_subccat | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) e. Cat ) |\n| 31 | 27 | #P_simprd | |- ( ( ph /\\ f e. ( E Func D ) ) -> D e. Cat ) |\n| 32 | 5, 6, 22, 25, 28, 28, 30, 31 | #P_funcpropd | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( E Func ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) = ( E Func D ) ) |\n| 33 |  | #P_funcres2 | |- ( ( ( Homf ` C ) |` ( V X. V ) ) e. ( Subcat ` C ) -> ( E Func ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) C_ ( E Func C ) ) |\n| 34 | 29, 33 | #P_syl | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( E Func ( C |`cat ( ( Homf ` C ) |` ( V X. V ) ) ) ) C_ ( E Func C ) ) |\n| 35 | 32, 34 | #P_eqsstr3d | |- ( ( ph /\\ f e. ( E Func D ) ) -> ( E Func D ) C_ ( E Func C ) ) |\n| 36 |  | #P_simpr | |- ( ( ph /\\ f e. ( E Func D ) ) -> f e. ( E Func D ) ) |\n| 37 | 35, 36 | #P_sseldd | |- ( ( ph /\\ f e. ( E Func D ) ) -> f e. ( E Func C ) ) |\n| 38 | 37 | #P_ex | |- ( ph -> ( f e. ( E Func D ) -> f e. ( E Func C ) ) ) |\n| 39 | 38 | #P_ssrdv | |- ( ph -> ( E Func D ) C_ ( E Func C ) ) |",
  "conclusion" : "#P_funcsetcres2",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vf", "#T_cC", "#T_wceq", "#T_csetc", "#T_cfv", "#T_cU", "#T_cD", "#T_wceq", "#T_csetc", "#T_cfv", "#T_cV", "#T_wph", "#T_wi", "#T_cU", "#T_wcel", "#T_cW", "#T_wph", "#T_wi", "#T_cV", "#T_wss", "#T_cU", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cE", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cE", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_ccomf", "#T_cfv", "#T_cE", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cE", "#T_cbs", "#T_cfv", "#T_cC", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cC", "#T_chomf", "#T_cfv", "#T_cC", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cC", "#T_cU", "#T_wcel", "#T_cW", "#T_wi", "#T_cC", "#T_wcel", "#T_ccat", "#T_wph", "#T_wi", "#T_cC", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cC", "#T_wcel", "#T_ccat", "#T_wph", "#T_wi", "#T_cU", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cC", "#T_wph", "#T_wi", "#T_cV", "#T_wss", "#T_cbs", "#T_cfv", "#T_cC", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cV", "#T_wss", "#T_cbs", "#T_cfv", "#T_cC", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_cC", "#T_cress", "#T_cV", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wceq", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wa", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wph", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cD", "#T_wa", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cD", "#T_wa", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wceq", "#T_chomf", "#T_cfv", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cress", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_ccomf", "#T_cfv", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wceq", "#T_ccomf", "#T_cfv", "#T_cD", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_wcel", "#T_ccat", "#T_wa", "#T_cD", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_wcel", "#T_ccat", "#T_wa", "#T_cD", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wcel", "#T_csubc", "#T_cfv", "#T_cC", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cD", "#T_wcel", "#T_ccat", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_cfunc", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wceq", "#T_cE", "#T_cfunc", "#T_cD", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wcel", "#T_csubc", "#T_cfv", "#T_cC", "#T_wi", "#T_cE", "#T_cfunc", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wss", "#T_cE", "#T_cfunc", "#T_cC", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_cfunc", "#T_cC", "#T_cresc", "#T_chomf", "#T_cfv", "#T_cC", "#T_cres", "#T_cV", "#T_cxp", "#T_cV", "#T_wss", "#T_cE", "#T_cfunc", "#T_cC", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cE", "#T_cfunc", "#T_cD", "#T_wss", "#T_cE", "#T_cfunc", "#T_cC", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wph", "#T_wa", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cC", "#T_wph", "#T_wi", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cD", "#T_wi", "#T_cbvex4v.vf", "#T_wcel", "#T_cE", "#T_cfunc", "#T_cC", "#T_wph", "#T_wi", "#T_cE", "#T_cfunc", "#T_cD", "#T_wss", "#T_cE", "#T_cfunc", "#T_cC" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_simpld", "#P_subccat", "#P_sseqtrd", "#P_funcres2", "#P_fullresc", "#P_adantl", "#P_fullsubc", "#P_resssetc", "#P_funcpropd", "#P_ssrdv", "#P_eqid", "#P_eqsstr3d", "#P_sseldd", "#P_setcbas", "#P_ex", "#P_eqidd", "#P_setccat", "#P_syl", "#P_funcrcl", "#P_simpr", "#P_eqtr3d", "#P_simprd", "#P_adantr" ]
}