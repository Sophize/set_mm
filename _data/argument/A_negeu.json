{
  "citations" : [ {
    "textCitation" : "[See negeu on Metamath](http://us.metamath.org/mpegif/negeu.html)"
  } ],
  "argumentText" : "ARGUMENT\ny\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_cnegex | |- ( A e. CC -> E. y e. CC ( A + y ) = 0 ) |\n| 2 | 1 | #P_adantr | |- ( ( A e. CC /\\ B e. CC ) -> E. y e. CC ( A + y ) = 0 ) |\n| 3 |  | #P_simpl | |- ( ( y e. CC /\\ ( A + y ) = 0 ) -> y e. CC ) |\n| 4 |  | #P_simpr | |- ( ( A e. CC /\\ B e. CC ) -> B e. CC ) |\n| 5 |  | #P_addcl | |- ( ( y e. CC /\\ B e. CC ) -> ( y + B ) e. CC ) |\n| 6 | 3, 4, 5 | #P_syl2anr | |- ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) -> ( y + B ) e. CC ) |\n| 7 |  | #P_simplrr | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( A + y ) = 0 ) |\n| 8 | 7 | #P_oveq1d | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( ( A + y ) + B ) = ( 0 + B ) ) |\n| 9 |  | #P_simplll | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> A e. CC ) |\n| 10 |  | #P_simplrl | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> y e. CC ) |\n| 11 |  | #P_simpllr | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> B e. CC ) |\n| 12 | 9, 10, 11 | #P_addassd | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( ( A + y ) + B ) = ( A + ( y + B ) ) ) |\n| 13 | 11 | #P_addid2d | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( 0 + B ) = B ) |\n| 14 | 8, 12, 13 | #P_3eqtr3rd | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> B = ( A + ( y + B ) ) ) |\n| 15 | 14 | #P_eqeq2d | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( ( A + x ) = B <-> ( A + x ) = ( A + ( y + B ) ) ) ) |\n| 16 |  | #P_simpr | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> x e. CC ) |\n| 17 | 10, 11 | #P_addcld | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( y + B ) e. CC ) |\n| 18 | 9, 16, 17 | #P_addcand | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( ( A + x ) = ( A + ( y + B ) ) <-> x = ( y + B ) ) ) |\n| 19 | 15, 18 | #P_bitrd | |- ( ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) /\\ x e. CC ) -> ( ( A + x ) = B <-> x = ( y + B ) ) ) |\n| 20 | 19 | #P_ralrimiva | |- ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) -> A. x e. CC ( ( A + x ) = B <-> x = ( y + B ) ) ) |\n| 21 |  | #P_reu6i | |- ( ( ( y + B ) e. CC /\\ A. x e. CC ( ( A + x ) = B <-> x = ( y + B ) ) ) -> E! x e. CC ( A + x ) = B ) |\n| 22 | 6, 20, 21 | #P_syl2anc | |- ( ( ( A e. CC /\\ B e. CC ) /\\ ( y e. CC /\\ ( A + y ) = 0 ) ) -> E! x e. CC ( A + x ) = B ) |\n| 23 | 2, 22 | #P_rexlimddv | |- ( ( A e. CC /\\ B e. CC ) -> E! x e. CC ( A + x ) = B ) |",
  "conclusion" : "#P_negeu",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vy", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wi", "#T_wrex--1", "#T_vy.tru", "#T_wrex--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wi", "#T_wrex--1", "#T_vy.tru", "#T_wrex--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wi", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wi", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wi", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wceq", "#T_cc0", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cc0", "#T_caddc", "#T_cB.wceq", "#T_wceq", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cB.wceq", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_wb", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wb", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wa", "#T_vx.wal", "#T_wcel", "#T_cc", "#T_wi", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_wb", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wi", "#T_wral--1", "#T_vx.wal", "#T_wral--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_wb", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_wral--1", "#T_vx.wal", "#T_wral--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_wb", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_cB.wceq", "#T_wi", "#T_wreu--1", "#T_vx.wal", "#T_wreu--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cB.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_wa", "#T_cA.wceq", "#T_caddc", "#T_vy.tru", "#T_wceq", "#T_cc0", "#T_wi", "#T_wreu--1", "#T_vx.wal", "#T_wreu--2", "#T_cc", "#T_cA.wceq", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cB.wceq", "#T_cA", "#T_wcel", "#T_cc", "#T_wa", "#T_cB", "#T_wcel", "#T_cc", "#T_wi", "#T_wreu--1", "#T_vx", "#T_wreu--2", "#T_cc", "#T_cA", "#T_caddc", "#T_vx", "#T_wceq", "#T_cB" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_3eqtr3rd", "#P_bitrd", "#P_cnegex", "#P_addcl", "#P_syl2anr", "#P_simplrr", "#P_simplll", "#P_addid2d", "#P_simpllr", "#P_reu6i", "#P_addcand", "#P_simplrl", "#P_addcld", "#P_syl2anc", "#P_eqeq2d", "#P_oveq1d", "#P_simpr", "#P_ralrimiva", "#P_simpl", "#P_rexlimddv", "#P_adantr", "#P_addassd" ]
}