{
  "citations" : [ {
    "textCitation" : "[See frlmvscafval on Metamath](http://us.metamath.org/mpegif/frlmvscafval.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | frlmvscafval.y | |- Y = ( R freeLMod I ) |\n| 2 |  | frlmvscafval.b | |- B = ( Base ` Y ) |\n| 3 |  | frlmvscafval.k | |- K = ( Base ` R ) |\n| 4 |  | frlmvscafval.i | |- ( ph -> I e. W ) |\n| 5 |  | frlmvscafval.a | |- ( ph -> A e. K ) |\n| 6 |  | frlmvscafval.x | |- ( ph -> X e. B ) |\n| 7 |  | frlmvscafval.v | |- .xb = ( .s ` Y ) |\n| 8 |  | frlmvscafval.t | |- .x. = ( .r ` R ) |\n| 9 | 1, 2 | #P_frlmrcl | |- ( X e. B -> R e. _V ) |\n| 10 | 6, 9 | #P_syl | |- ( ph -> R e. _V ) |\n| 11 | 1, 2 | #P_frlmpws | |- ( ( R e. _V /\\ I e. W ) -> Y = ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) |\n| 12 | 10, 4, 11 | #P_syl2anc | |- ( ph -> Y = ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) |\n| 13 | 12 | #P_fveq2d | |- ( ph -> ( .s ` Y ) = ( .s ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) ) |\n| 14 |  | #P_fvex | |- ( Base ` Y ) e. _V |\n| 15 | 2, 14 | #P_eqeltri | |- B e. _V |\n| 16 |  | #P_eqid | |- ( ( ( ringLMod ` R ) ^s I ) |`s B ) = ( ( ( ringLMod ` R ) ^s I ) |`s B ) |\n| 17 |  | #P_eqid | |- ( .s ` ( ( ringLMod ` R ) ^s I ) ) = ( .s ` ( ( ringLMod ` R ) ^s I ) ) |\n| 18 | 16, 17 | #P_ressvsca | |- ( B e. _V -> ( .s ` ( ( ringLMod ` R ) ^s I ) ) = ( .s ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) ) |\n| 19 | 15, 18 | #P_ax-mp | |- ( .s ` ( ( ringLMod ` R ) ^s I ) ) = ( .s ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) |\n| 20 | 13, 7, 19 | #P_3eqtr4g | |- ( ph -> .xb = ( .s ` ( ( ringLMod ` R ) ^s I ) ) ) |\n| 21 | 20 | #P_oveqd | |- ( ph -> ( A .xb X ) = ( A ( .s ` ( ( ringLMod ` R ) ^s I ) ) X ) ) |\n| 22 |  | #P_eqid | |- ( ( ringLMod ` R ) ^s I ) = ( ( ringLMod ` R ) ^s I ) |\n| 23 |  | #P_eqid | |- ( Base ` ( ( ringLMod ` R ) ^s I ) ) = ( Base ` ( ( ringLMod ` R ) ^s I ) ) |\n| 24 |  | #P_rlmvsca | |- ( .r ` R ) = ( .s ` ( ringLMod ` R ) ) |\n| 25 | 8, 24 | #P_eqtri | |- .x. = ( .s ` ( ringLMod ` R ) ) |\n| 26 |  | #P_eqid | |- ( Scalar ` ( ringLMod ` R ) ) = ( Scalar ` ( ringLMod ` R ) ) |\n| 27 |  | #P_eqid | |- ( Base ` ( Scalar ` ( ringLMod ` R ) ) ) = ( Base ` ( Scalar ` ( ringLMod ` R ) ) ) |\n| 28 |  | #P_fvex | |- ( ringLMod ` R ) e. _V |\n| 29 | 28 | #P_a1i | |- ( ph -> ( ringLMod ` R ) e. _V ) |\n| 30 |  | #P_rlmsca | |- ( R e. _V -> R = ( Scalar ` ( ringLMod ` R ) ) ) |\n| 31 | 10, 30 | #P_syl | |- ( ph -> R = ( Scalar ` ( ringLMod ` R ) ) ) |\n| 32 | 31 | #P_fveq2d | |- ( ph -> ( Base ` R ) = ( Base ` ( Scalar ` ( ringLMod ` R ) ) ) ) |\n| 33 | 3, 32 | #P_syl5eq | |- ( ph -> K = ( Base ` ( Scalar ` ( ringLMod ` R ) ) ) ) |\n| 34 | 5, 33 | #P_eleqtrd | |- ( ph -> A e. ( Base ` ( Scalar ` ( ringLMod ` R ) ) ) ) |\n| 35 | 12 | #P_fveq2d | |- ( ph -> ( Base ` Y ) = ( Base ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) ) |\n| 36 | 2, 35 | #P_syl5eq | |- ( ph -> B = ( Base ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) ) |\n| 37 | 16, 23 | #P_ressbasss | |- ( Base ` ( ( ( ringLMod ` R ) ^s I ) |`s B ) ) C_ ( Base ` ( ( ringLMod ` R ) ^s I ) ) |\n| 38 | 36, 37 | #P_syl6eqss | |- ( ph -> B C_ ( Base ` ( ( ringLMod ` R ) ^s I ) ) ) |\n| 39 | 38, 6 | #P_sseldd | |- ( ph -> X e. ( Base ` ( ( ringLMod ` R ) ^s I ) ) ) |\n| 40 | 22, 23, 25, 17, 26, 27, 29, 4, 34, 39 | #P_pwsvscafval | |- ( ph -> ( A ( .s ` ( ( ringLMod ` R ) ^s I ) ) X ) = ( ( I X. { A } ) oF .x. X ) ) |\n| 41 | 21, 40 | #P_eqtrd | |- ( ph -> ( A .xb X ) = ( ( I X. { A } ) oF .x. X ) ) |",
  "conclusion" : "#P_frlmvscafval",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cY", "#T_wceq", "#T_cR", "#T_cfrlm", "#T_cI", "#T_cB", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cY", "#T_cK", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cI", "#T_wcel", "#T_cW", "#T_wph", "#T_wi", "#T_cA", "#T_wcel", "#T_cK", "#T_wph", "#T_wi", "#T_cX", "#T_wcel", "#T_cB", "#T_c.xb", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_cY", "#T_c.x", "#T_wceq", "#T_cmulr", "#T_cfv", "#T_cR", "#T_cX", "#T_wcel", "#T_cB.wceq", "#T_wi", "#T_cR", "#T_wcel", "#T_cvv", "#T_wph", "#T_wi", "#T_cR", "#T_wcel", "#T_cvv", "#T_cR", "#T_wcel", "#T_cvv", "#T_wa", "#T_cI", "#T_wcel", "#T_cW", "#T_wi", "#T_cY", "#T_wceq", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_cY", "#T_wceq", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_cvsca", "#T_cfv", "#T_cY", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_cbs", "#T_cfv", "#T_cY", "#T_wcel", "#T_cvv", "#T_cB.wceq", "#T_wcel", "#T_cvv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wceq", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cB.wceq", "#T_wcel", "#T_cvv", "#T_wi", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_c.xb", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_c.xb", "#T_cX", "#T_wceq", "#T_cA.wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cX", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wceq", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wceq", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cmulr", "#T_cfv", "#T_cR", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_c.x", "#T_wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wceq", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wcel", "#T_cvv", "#T_wph", "#T_wi", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wcel", "#T_cvv", "#T_cR", "#T_wcel", "#T_cvv", "#T_wi", "#T_cR", "#T_wceq", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cR", "#T_wceq", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cbs", "#T_cfv", "#T_cR", "#T_wceq", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cK", "#T_wceq", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_wcel", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_wph", "#T_wi", "#T_cbs", "#T_cfv", "#T_cY", "#T_wceq", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wph", "#T_wi", "#T_cB.wceq", "#T_wceq", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cress", "#T_cB.wceq", "#T_wss", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wph", "#T_wi", "#T_cB.wceq", "#T_wss", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wph", "#T_wi", "#T_cX", "#T_wcel", "#T_cbs", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_wph", "#T_wi", "#T_cA.wceq", "#T_cvsca", "#T_cfv", "#T_crglmod", "#T_cfv", "#T_cR", "#T_cpws", "#T_cI", "#T_cX", "#T_wceq", "#T_cI", "#T_cxp", "#T_csn--1", "#T_cA.wceq", "#T_csn--2", "#T_cof", "#T_c.x", "#T_cX", "#T_wph", "#T_wi", "#T_cA", "#T_c.xb", "#T_cX", "#T_wceq", "#T_cI", "#T_cxp", "#T_csn--1", "#T_cA", "#T_csn--2", "#T_cof", "#T_c.x", "#T_cX" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_eleqtrd", "#P_ressbasss", "#P_eqeltri", "#P_ressvsca", "#P_ax-mp", "#P_syl6eqss", "#P_fveq2d", "#P_rlmsca", "#P_a1i", "#P_frlmpws", "#P_syl5eq", "#P_eqid", "#P_eqtri", "#P_sseldd", "#P_oveqd", "#P_eqtrd", "#P_syl2anc", "#P_syl", "#P_rlmvsca", "#P_frlmrcl", "#P_3eqtr4g", "#P_fvex", "#P_pwsvscafval" ]
}