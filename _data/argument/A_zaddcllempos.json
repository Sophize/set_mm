{
  "citations" : [ {
    "textCitation" : "[See zaddcllempos on Metamath](http://us.metamath.org/mpegif/zaddcllempos.html)"
  } ],
  "argumentText" : "ARGUMENT\nx y\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_oveq2 | |- ( x = 1 -> ( M + x ) = ( M + 1 ) ) |\n| 2 | 1 | #P_eleq1d | |- ( x = 1 -> ( ( M + x ) e. ZZ <-> ( M + 1 ) e. ZZ ) ) |\n| 3 | 2 | #P_imbi2d | |- ( x = 1 -> ( ( M e. ZZ -> ( M + x ) e. ZZ ) <-> ( M e. ZZ -> ( M + 1 ) e. ZZ ) ) ) |\n| 4 |  | #P_oveq2 | |- ( x = y -> ( M + x ) = ( M + y ) ) |\n| 5 | 4 | #P_eleq1d | |- ( x = y -> ( ( M + x ) e. ZZ <-> ( M + y ) e. ZZ ) ) |\n| 6 | 5 | #P_imbi2d | |- ( x = y -> ( ( M e. ZZ -> ( M + x ) e. ZZ ) <-> ( M e. ZZ -> ( M + y ) e. ZZ ) ) ) |\n| 7 |  | #P_oveq2 | |- ( x = ( y + 1 ) -> ( M + x ) = ( M + ( y + 1 ) ) ) |\n| 8 | 7 | #P_eleq1d | |- ( x = ( y + 1 ) -> ( ( M + x ) e. ZZ <-> ( M + ( y + 1 ) ) e. ZZ ) ) |\n| 9 | 8 | #P_imbi2d | |- ( x = ( y + 1 ) -> ( ( M e. ZZ -> ( M + x ) e. ZZ ) <-> ( M e. ZZ -> ( M + ( y + 1 ) ) e. ZZ ) ) ) |\n| 10 |  | #P_oveq2 | |- ( x = N -> ( M + x ) = ( M + N ) ) |\n| 11 | 10 | #P_eleq1d | |- ( x = N -> ( ( M + x ) e. ZZ <-> ( M + N ) e. ZZ ) ) |\n| 12 | 11 | #P_imbi2d | |- ( x = N -> ( ( M e. ZZ -> ( M + x ) e. ZZ ) <-> ( M e. ZZ -> ( M + N ) e. ZZ ) ) ) |\n| 13 |  | #P_peano2z | |- ( M e. ZZ -> ( M + 1 ) e. ZZ ) |\n| 14 |  | #P_peano2z | |- ( ( M + y ) e. ZZ -> ( ( M + y ) + 1 ) e. ZZ ) |\n| 15 |  | #P_zcn | |- ( M e. ZZ -> M e. CC ) |\n| 16 | 15 | #P_adantl | |- ( ( y e. NN /\\ M e. ZZ ) -> M e. CC ) |\n| 17 |  | #P_nncn | |- ( y e. NN -> y e. CC ) |\n| 18 | 17 | #P_adantr | |- ( ( y e. NN /\\ M e. ZZ ) -> y e. CC ) |\n| 19 |  | #P_1cnd | |- ( ( y e. NN /\\ M e. ZZ ) -> 1 e. CC ) |\n| 20 | 16, 18, 19 | #P_addassd | |- ( ( y e. NN /\\ M e. ZZ ) -> ( ( M + y ) + 1 ) = ( M + ( y + 1 ) ) ) |\n| 21 | 20 | #P_eleq1d | |- ( ( y e. NN /\\ M e. ZZ ) -> ( ( ( M + y ) + 1 ) e. ZZ <-> ( M + ( y + 1 ) ) e. ZZ ) ) |\n| 22 | 14, 21 | #P_syl5ib | |- ( ( y e. NN /\\ M e. ZZ ) -> ( ( M + y ) e. ZZ -> ( M + ( y + 1 ) ) e. ZZ ) ) |\n| 23 | 22 | #P_ex | |- ( y e. NN -> ( M e. ZZ -> ( ( M + y ) e. ZZ -> ( M + ( y + 1 ) ) e. ZZ ) ) ) |\n| 24 | 23 | #P_a2d | |- ( y e. NN -> ( ( M e. ZZ -> ( M + y ) e. ZZ ) -> ( M e. ZZ -> ( M + ( y + 1 ) ) e. ZZ ) ) ) |\n| 25 | 3, 6, 9, 12, 13, 24 | #P_nnind | |- ( N e. NN -> ( M e. ZZ -> ( M + N ) e. ZZ ) ) |\n| 26 | 25 | #P_impcom | |- ( ( M e. ZZ /\\ N e. NN ) -> ( M + N ) e. ZZ ) |",
  "conclusion" : "#P_zaddcllempos",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vx", "#T_vy", "#T_vx.wal", "#T_wceq", "#T_c1", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cM", "#T_caddc", "#T_c1", "#T_vx.wal", "#T_wceq", "#T_c1", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_c1", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_cN", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wceq", "#T_cM", "#T_caddc", "#T_cN", "#T_vx.wal", "#T_wceq", "#T_cN", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_caddc", "#T_cN", "#T_wcel", "#T_cz", "#T_vx.wal", "#T_wceq", "#T_cN", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vx.wal", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_cN", "#T_wcel", "#T_cz", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_c1", "#T_wcel", "#T_cc", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wceq", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_wb", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wa", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_vy.tru", "#T_wcel", "#T_cn", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_vy.tru", "#T_caddc", "#T_c1", "#T_wcel", "#T_cz", "#T_cN", "#T_wcel", "#T_cn", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_wi", "#T_cM", "#T_caddc", "#T_cN", "#T_wcel", "#T_cz", "#T_cM", "#T_wcel", "#T_cz", "#T_wa", "#T_cN", "#T_wcel", "#T_cn", "#T_wi", "#T_cM", "#T_caddc", "#T_cN", "#T_wcel", "#T_cz" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_adantl", "#P_oveq2", "#P_1cnd", "#P_imbi2d", "#P_a2d", "#P_impcom", "#P_nncn", "#P_nnind", "#P_ex", "#P_peano2z", "#P_syl5ib", "#P_eleq1d", "#P_zcn", "#P_adantr", "#P_addassd" ]
}