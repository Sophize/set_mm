{
  "citations" : [ {
    "textCitation" : "[See eftlcl on Metamath](http://us.metamath.org/mpegif/eftlcl.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | eftl.1 | |- F = ( n e. NN0 |-> ( ( A ^ n ) / ( ! ` n ) ) ) |\n| 2 |  | #P_eqid | |- ( ZZ>= ` M ) = ( ZZ>= ` M ) |\n| 3 |  | #P_nn0z | |- ( M e. NN0 -> M e. ZZ ) |\n| 4 | 3 | #P_adantl | |- ( ( A e. CC /\\ M e. NN0 ) -> M e. ZZ ) |\n| 5 |  | #P_eqidd | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> ( F ` k ) = ( F ` k ) ) |\n| 6 |  | #P_eluznn0 | |- ( ( M e. NN0 /\\ k e. ( ZZ>= ` M ) ) -> k e. NN0 ) |\n| 7 | 6 | #P_adantll | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> k e. NN0 ) |\n| 8 | 1 | #P_eftval | |- ( k e. NN0 -> ( F ` k ) = ( ( A ^ k ) / ( ! ` k ) ) ) |\n| 9 | 7, 8 | #P_syl | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> ( F ` k ) = ( ( A ^ k ) / ( ! ` k ) ) ) |\n| 10 |  | #P_simpll | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> A e. CC ) |\n| 11 |  | #P_eftcl | |- ( ( A e. CC /\\ k e. NN0 ) -> ( ( A ^ k ) / ( ! ` k ) ) e. CC ) |\n| 12 | 10, 7, 11 | #P_syl2anc | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> ( ( A ^ k ) / ( ! ` k ) ) e. CC ) |\n| 13 | 9, 12 | #P_eqeltrd | |- ( ( ( A e. CC /\\ M e. NN0 ) /\\ k e. ( ZZ>= ` M ) ) -> ( F ` k ) e. CC ) |\n| 14 | 1 | #P_eftlcvg | |- ( ( A e. CC /\\ M e. NN0 ) -> seq M ( + , F ) e. dom ~~> ) |\n| 15 | 2, 4, 5, 13, 14 | #P_isumcl | |- ( ( A e. CC /\\ M e. NN0 ) -> sum_ k e. ( ZZ>= ` M ) ( F ` k ) e. CC ) |",
  "conclusion" : "#P_eftlcl",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cF", "#T_wceq", "#T_vn", "#T_cmpt--1", "#T_cn0", "#T_cmpt--2", "#T_cA", "#T_cexp", "#T_vn", "#T_cdiv", "#T_cfa", "#T_cfv", "#T_vn", "#T_cuz", "#T_cfv", "#T_cM", "#T_wceq", "#T_cuz", "#T_cfv", "#T_cM", "#T_cM", "#T_wcel", "#T_cn0", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wi", "#T_cM", "#T_wcel", "#T_cz", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_cF", "#T_cfv", "#T_vk", "#T_wceq", "#T_cF", "#T_cfv", "#T_vk", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_vk", "#T_wcel", "#T_cn0", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_vk", "#T_wcel", "#T_cn0", "#T_vk", "#T_wcel", "#T_cn0", "#T_wi", "#T_cF", "#T_cfv", "#T_vk", "#T_wceq", "#T_cA.wceq", "#T_cexp", "#T_vk", "#T_cdiv", "#T_cfa", "#T_cfv", "#T_vk", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_cF", "#T_cfv", "#T_vk", "#T_wceq", "#T_cA.wceq", "#T_cexp", "#T_vk", "#T_cdiv", "#T_cfa", "#T_cfv", "#T_vk", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_vk", "#T_wcel", "#T_cn0", "#T_wi", "#T_cA.wceq", "#T_cexp", "#T_vk", "#T_cdiv", "#T_cfa", "#T_cfv", "#T_vk", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_cA.wceq", "#T_cexp", "#T_vk", "#T_cdiv", "#T_cfa", "#T_cfv", "#T_vk", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_vk", "#T_wcel", "#T_cuz", "#T_cfv", "#T_cM", "#T_wi", "#T_cF", "#T_cfv", "#T_vk", "#T_wcel", "#T_cc", "#T_cA.wceq", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wi", "#T_cseq--1", "#T_cM", "#T_caddc", "#T_cseq--2", "#T_cF", "#T_wcel", "#T_cdm", "#T_cli", "#T_cA", "#T_wcel", "#T_cc", "#T_wa", "#T_cM", "#T_wcel", "#T_cn0", "#T_wi", "#T_csu--1", "#T_vk", "#T_csu--2", "#T_cuz", "#T_cfv", "#T_cM", "#T_cF", "#T_cfv", "#T_vk", "#T_wcel", "#T_cc" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_adantl", "#P_eqeltrd", "#P_simpll", "#P_nn0z", "#P_eqid", "#P_eluznn0", "#P_syl2anc", "#P_eftval", "#P_eqidd", "#P_syl", "#P_adantll", "#P_eftlcvg", "#P_isumcl", "#P_eftcl" ]
}