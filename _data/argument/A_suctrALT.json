{
  "citations" : [ {
    "textCitation" : "[See suctrALT on Metamath](http://us.metamath.org/mpegif/suctrALT.html)"
  } ],
  "argumentText" : "ARGUMENT\ny z\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_sssucid | |- A C_ suc A |\n| 2 |  | #P_id | |- ( Tr A -> Tr A ) |\n| 3 |  | #P_id | |- ( ( z e. y /\\ y e. suc A ) -> ( z e. y /\\ y e. suc A ) ) |\n| 4 | 3 | #P_simpld | |- ( ( z e. y /\\ y e. suc A ) -> z e. y ) |\n| 5 |  | #P_id | |- ( y e. A -> y e. A ) |\n| 6 |  | #P_trel | |- ( Tr A -> ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 7 | 6 | #P_3impib | |- ( ( Tr A /\\ z e. y /\\ y e. A ) -> z e. A ) |\n| 8 | 7 | #P_idi | |- ( ( Tr A /\\ z e. y /\\ y e. A ) -> z e. A ) |\n| 9 | 2, 4, 5, 8 | #P_syl3an | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) /\\ y e. A ) -> z e. A ) |\n| 10 | 1, 9 | #P_sseldi | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) /\\ y e. A ) -> z e. suc A ) |\n| 11 | 10 | #P_3expia | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) ) -> ( y e. A -> z e. suc A ) ) |\n| 12 | 4 | #P_adantr | |- ( ( ( z e. y /\\ y e. suc A ) /\\ y = A ) -> z e. y ) |\n| 13 |  | #P_id | |- ( y = A -> y = A ) |\n| 14 | 13 | #P_adantl | |- ( ( ( z e. y /\\ y e. suc A ) /\\ y = A ) -> y = A ) |\n| 15 | 12, 14 | #P_eleqtrd | |- ( ( ( z e. y /\\ y e. suc A ) /\\ y = A ) -> z e. A ) |\n| 16 | 1, 15 | #P_sseldi | |- ( ( ( z e. y /\\ y e. suc A ) /\\ y = A ) -> z e. suc A ) |\n| 17 | 16 | #P_ex | |- ( ( z e. y /\\ y e. suc A ) -> ( y = A -> z e. suc A ) ) |\n| 18 | 17 | #P_adantl | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) ) -> ( y = A -> z e. suc A ) ) |\n| 19 | 3 | #P_simprd | |- ( ( z e. y /\\ y e. suc A ) -> y e. suc A ) |\n| 20 |  | #P_elsuci | |- ( y e. suc A -> ( y e. A \\/ y = A ) ) |\n| 21 | 19, 20 | #P_syl | |- ( ( z e. y /\\ y e. suc A ) -> ( y e. A \\/ y = A ) ) |\n| 22 | 21 | #P_adantl | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) ) -> ( y e. A \\/ y = A ) ) |\n| 23 | 11, 18, 22 | #P_mpjaod | |- ( ( Tr A /\\ ( z e. y /\\ y e. suc A ) ) -> z e. suc A ) |\n| 24 | 23 | #P_ex | |- ( Tr A -> ( ( z e. y /\\ y e. suc A ) -> z e. suc A ) ) |\n| 25 | 24 | #P_alrimivv | |- ( Tr A -> A. z A. y ( ( z e. y /\\ y e. suc A ) -> z e. suc A ) ) |\n| 26 |  | #P_dftr2 | |- ( Tr suc A <-> A. z A. y ( ( z e. y /\\ y e. suc A ) -> z e. suc A ) ) |\n| 27 | 26 | #P_biimpri | |- ( A. z A. y ( ( z e. y /\\ y e. suc A ) -> z e. suc A ) -> Tr suc A ) |\n| 28 | 25, 27 | #P_syl | |- ( Tr A -> Tr suc A ) |\n\\\n The successor of a transitive class is transitive.  The proof of ~ http://us.metamath.org/other/completeusersproof/suctrvd.html is a Virtual Deduction proof verified by automatically transforming it into the Metamath proof of ~ suctrALT using completeusersproof, which is verified by the Metamath program.  The proof of ~ http://us.metamath.org/other/completeusersproof/suctrro.html is a form of the completed proof which preserves the Virtual Deduction proof's step numbers and their ordering.  See ~ suctr for the original proof. (Contributed by Alan Sare, 11-Apr-2009.)  (Revised by Alan Sare, 12-Jun-2018.)  (Proof modification is discouraged.) (New usage is discouraged.) ",
  "conclusion" : "#P_suctr",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vy", "#T_vz", "#T_cA.wceq", "#T_wss", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wi", "#T_wtr", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_w3a--1", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_w3a--2", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_w3a--1", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_w3a--2", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_w3a--1", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_w3a--2", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_w3a--1", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_w3a--2", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wa", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wa", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wa", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wa", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wa", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wa", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wo", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wo", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wa", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wo", "#T_vy.tru", "#T_wceq", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wa", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wi", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_csuc", "#T_cA.wceq", "#T_wb", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_csuc", "#T_cA.wceq", "#T_wi", "#T_wtr", "#T_csuc", "#T_cA.wceq", "#T_wtr", "#T_cA", "#T_wi", "#T_wtr", "#T_csuc", "#T_cA" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_eleqtrd", "#P_simpld", "#P_3expia", "#P_alrimivv", "#P_adantl", "#P_mpjaod", "#P_dftr2", "#P_elsuci", "#P_syl3an", "#P_biimpri", "#P_3impib", "#P_idi", "#P_sseldi", "#P_ex", "#P_trel", "#P_syl", "#P_sssucid", "#P_simprd", "#P_id", "#P_adantr" ]
}