{
  "citations" : [ {
    "textCitation" : "[See aecom-o on Metamath](http://us.metamath.org/mpegif/aecom-o.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_axc11 | |- ( A. x x = y -> ( A. x x = y -> A. y x = y ) ) |\n| 2 | 1 | #P_pm2.43i | |- ( A. x x = y -> A. y x = y ) |\n| 3 |  | #P_equcomi | |- ( x = y -> y = x ) |\n| 4 | 3 | #P_alimi | |- ( A. y x = y -> A. y y = x ) |\n| 5 | 2, 4 | #P_syl | |- ( A. x x = y -> A. y y = x ) |\n\\\n Commutation law for identical variable specifiers.  The antecedent and consequent are true when ` x ` and ` y ` are substituted with the same variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint).  Version of ~ aecom using ~ ax-c11 .  Unlike ~ axc11nfromc11 , this version does not require ~ ax-5 .  (Contributed by NM, 10-May-1993.) (New usage is discouraged.) ",
  "conclusion" : "#P_axi10",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wal", "#T_vy.tru", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wal", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wal", "#T_vy.tru", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_vy.tru", "#T_wceq", "#T_vx.wal", "#T_wal", "#T_vy.tru", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wal", "#T_vy.tru", "#T_vy.tru", "#T_wceq", "#T_vx.wal", "#T_wal", "#T_vx", "#T_vx", "#T_wceq", "#T_vy", "#T_wi", "#T_wal", "#T_vy", "#T_vy", "#T_wceq", "#T_vx" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_pm2.43i", "#P_alimi", "#P_syl", "#P_equcomi", "#P_axc11" ]
}