{
  "citations" : [ {
    "textCitation" : "[See isnumbasgrplem3 on Metamath](http://us.metamath.org/mpegif/isnumbasgrplem3.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_hashcl | |- ( S e. Fin -> ( # ` S ) e. NN0 ) |\n| 2 | 1 | #P_adantl | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( # ` S ) e. NN0 ) |\n| 3 |  | #P_eqid | |- ( Z/nZ ` ( # ` S ) ) = ( Z/nZ ` ( # ` S ) ) |\n| 4 | 3 | #P_zncrng | |- ( ( # ` S ) e. NN0 -> ( Z/nZ ` ( # ` S ) ) e. CRing ) |\n| 5 |  | #P_crngring | |- ( ( Z/nZ ` ( # ` S ) ) e. CRing -> ( Z/nZ ` ( # ` S ) ) e. Ring ) |\n| 6 |  | #P_ringabl | |- ( ( Z/nZ ` ( # ` S ) ) e. Ring -> ( Z/nZ ` ( # ` S ) ) e. Abel ) |\n| 7 | 2, 4, 5, 6 | #P_4syl | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( Z/nZ ` ( # ` S ) ) e. Abel ) |\n| 8 |  | #P_hashnncl | |- ( S e. Fin -> ( ( # ` S ) e. NN <-> S =/= (/) ) ) |\n| 9 | 8 | #P_biimparc | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( # ` S ) e. NN ) |\n| 10 |  | #P_eqid | |- ( Base ` ( Z/nZ ` ( # ` S ) ) ) = ( Base ` ( Z/nZ ` ( # ` S ) ) ) |\n| 11 | 3, 10 | #P_znhash | |- ( ( # ` S ) e. NN -> ( # ` ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) = ( # ` S ) ) |\n| 12 | 9, 11 | #P_syl | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( # ` ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) = ( # ` S ) ) |\n| 13 | 12 | #P_eqcomd | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( # ` S ) = ( # ` ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) ) |\n| 14 |  | #P_simpr | |- ( ( S =/= (/) /\\ S e. Fin ) -> S e. Fin ) |\n| 15 | 3, 10 | #P_znfi | |- ( ( # ` S ) e. NN -> ( Base ` ( Z/nZ ` ( # ` S ) ) ) e. Fin ) |\n| 16 | 9, 15 | #P_syl | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( Base ` ( Z/nZ ` ( # ` S ) ) ) e. Fin ) |\n| 17 |  | #P_hashen | |- ( ( S e. Fin /\\ ( Base ` ( Z/nZ ` ( # ` S ) ) ) e. Fin ) -> ( ( # ` S ) = ( # ` ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) <-> S ~~ ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) ) |\n| 18 | 14, 16, 17 | #P_syl2anc | |- ( ( S =/= (/) /\\ S e. Fin ) -> ( ( # ` S ) = ( # ` ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) <-> S ~~ ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) ) |\n| 19 | 13, 18 | #P_mpbid | |- ( ( S =/= (/) /\\ S e. Fin ) -> S ~~ ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) |\n| 20 | 10 | #P_isnumbasgrplem1 | |- ( ( ( Z/nZ ` ( # ` S ) ) e. Abel /\\ S ~~ ( Base ` ( Z/nZ ` ( # ` S ) ) ) ) -> S e. ( Base \" Abel ) ) |\n| 21 | 7, 19, 20 | #P_syl2anc | |- ( ( S =/= (/) /\\ S e. Fin ) -> S e. ( Base \" Abel ) ) |\n| 22 | 21 | #P_adantll | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ S e. Fin ) -> S e. ( Base \" Abel ) ) |\n| 23 |  | #P_2nn0 | |- 2 e. NN0 |\n| 24 |  | #P_eqid | |- ( Z/nZ ` 2 ) = ( Z/nZ ` 2 ) |\n| 25 | 24 | #P_zncrng | |- ( 2 e. NN0 -> ( Z/nZ ` 2 ) e. CRing ) |\n| 26 |  | #P_crngring | |- ( ( Z/nZ ` 2 ) e. CRing -> ( Z/nZ ` 2 ) e. Ring ) |\n| 27 | 23, 25, 26 | #P_mp2b | |- ( Z/nZ ` 2 ) e. Ring |\n| 28 |  | #P_eqid | |- ( ( Z/nZ ` 2 ) freeLMod S ) = ( ( Z/nZ ` 2 ) freeLMod S ) |\n| 29 | 28 | #P_frlmlmod | |- ( ( ( Z/nZ ` 2 ) e. Ring /\\ S e. dom card ) -> ( ( Z/nZ ` 2 ) freeLMod S ) e. LMod ) |\n| 30 | 27, 29 | #P_mpan | |- ( S e. dom card -> ( ( Z/nZ ` 2 ) freeLMod S ) e. LMod ) |\n| 31 |  | #P_lmodabl | |- ( ( ( Z/nZ ` 2 ) freeLMod S ) e. LMod -> ( ( Z/nZ ` 2 ) freeLMod S ) e. Abel ) |\n| 32 | 30, 31 | #P_syl | |- ( S e. dom card -> ( ( Z/nZ ` 2 ) freeLMod S ) e. Abel ) |\n| 33 | 32 | #P_ad2antrr | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> ( ( Z/nZ ` 2 ) freeLMod S ) e. Abel ) |\n| 34 |  | #P_eqid | |- ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) = ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) |\n| 35 | 24, 28, 34 | #P_frlmpwfi | |- ( S e. dom card -> ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ~~ ( ~P S i^i Fin ) ) |\n| 36 | 35 | #P_ad2antrr | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ~~ ( ~P S i^i Fin ) ) |\n| 37 |  | #P_simpll | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> S e. dom card ) |\n| 38 |  | #P_numinfctb | |- ( ( S e. dom card /\\ -. S e. Fin ) -> _om ~<_ S ) |\n| 39 | 38 | #P_adantlr | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> _om ~<_ S ) |\n| 40 |  | #P_infpwfien | |- ( ( S e. dom card /\\ _om ~<_ S ) -> ( ~P S i^i Fin ) ~~ S ) |\n| 41 | 37, 39, 40 | #P_syl2anc | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> ( ~P S i^i Fin ) ~~ S ) |\n| 42 |  | #P_entr | |- ( ( ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ~~ ( ~P S i^i Fin ) /\\ ( ~P S i^i Fin ) ~~ S ) -> ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ~~ S ) |\n| 43 | 36, 41, 42 | #P_syl2anc | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ~~ S ) |\n| 44 | 43 | #P_ensymd | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> S ~~ ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ) |\n| 45 | 34 | #P_isnumbasgrplem1 | |- ( ( ( ( Z/nZ ` 2 ) freeLMod S ) e. Abel /\\ S ~~ ( Base ` ( ( Z/nZ ` 2 ) freeLMod S ) ) ) -> S e. ( Base \" Abel ) ) |\n| 46 | 33, 44, 45 | #P_syl2anc | |- ( ( ( S e. dom card /\\ S =/= (/) ) /\\ -. S e. Fin ) -> S e. ( Base \" Abel ) ) |\n| 47 | 22, 46 | #P_pm2.61dan | |- ( ( S e. dom card /\\ S =/= (/) ) -> S e. ( Base \" Abel ) ) |",
  "conclusion" : "#P_isnumbasgrplem3",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn0", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn0", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn0", "#T_wi", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_ccrg", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_ccrg", "#T_wi", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_crg", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_crg", "#T_wi", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cabl", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cabl", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn", "#T_wb", "#T_cS", "#T_wne", "#T_c0", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn", "#T_wi", "#T_chash", "#T_cfv", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_chash", "#T_cfv", "#T_cS", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_chash", "#T_cfv", "#T_cS", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_chash", "#T_cfv", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_wcel", "#T_cfn", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cn", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cfn", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cfn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wa", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_chash", "#T_cfv", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wb", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_chash", "#T_cfv", "#T_cS", "#T_wceq", "#T_chash", "#T_cfv", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wb", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wcel", "#T_cabl", "#T_wa", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_chash", "#T_cfv", "#T_cS", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl", "#T_c2", "#T_wcel", "#T_cn0", "#T_czn", "#T_cfv", "#T_c2", "#T_wceq", "#T_czn", "#T_cfv", "#T_c2", "#T_c2", "#T_wcel", "#T_cn0", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_wcel", "#T_ccrg", "#T_czn", "#T_cfv", "#T_c2", "#T_wcel", "#T_ccrg", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_wcel", "#T_crg", "#T_czn", "#T_cfv", "#T_c2", "#T_wcel", "#T_crg", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wceq", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_czn", "#T_cfv", "#T_c2", "#T_wcel", "#T_crg", "#T_wa", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_clmod", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_clmod", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_clmod", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_cabl", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_cabl", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_cabl", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wceq", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cen", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cen", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_com", "#T_cdom", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_com", "#T_cdom", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_com", "#T_cdom", "#T_cS", "#T_wi", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_cen", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_cen", "#T_cS", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cen", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_wa", "#T_cpw", "#T_cS", "#T_cin", "#T_cfn", "#T_cen", "#T_cS", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cen", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_cen", "#T_cS", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wcel", "#T_cabl", "#T_wa", "#T_cS", "#T_cen", "#T_cbs", "#T_cfv", "#T_czn", "#T_cfv", "#T_c2", "#T_cfrlm", "#T_cS", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wa", "#T_wn", "#T_cS", "#T_wcel", "#T_cfn", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl", "#T_cS", "#T_wcel", "#T_cdm", "#T_ccrd", "#T_wa", "#T_cS", "#T_wne", "#T_c0", "#T_wi", "#T_cS", "#T_wcel", "#T_cbs", "#T_cima", "#T_cabl" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_hashcl", "#P_hashen", "#P_mpbid", "#P_crngring", "#P_isnumbasgrplem1", "#P_eqcomd", "#P_lmodabl", "#P_simpll", "#P_frlmlmod", "#P_infpwfien", "#P_adantlr", "#P_eqid", "#P_frlmpwfi", "#P_4syl", "#P_syl2anc", "#P_hashnncl", "#P_znfi", "#P_syl", "#P_adantll", "#P_zncrng", "#P_ensymd", "#P_biimparc", "#P_2nn0", "#P_numinfctb", "#P_znhash", "#P_adantl", "#P_ringabl", "#P_mpan", "#P_mp2b", "#P_ad2antrr", "#P_entr", "#P_pm2.61dan", "#P_simpr" ]
}