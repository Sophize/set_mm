{
  "citations" : [ {
    "textCitation" : "[See sb5ALTVD on Metamath](http://us.metamath.org/mpegif/sb5ALTVD.html)"
  } ],
  "argumentText" : "ARGUMENT\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_idn1 | |- (. [ y / x ] ph ->. [ y / x ] ph ). |\n| 2 |  | #P_equsb1 | |- [ y / x ] x = y |\n| 3 |  | #P_sban | |- ( [ y / x ] ( x = y /\\ ph ) <-> ( [ y / x ] x = y /\\ [ y / x ] ph ) ) |\n| 4 | 3 | #P_simplbi2com | |- ( [ y / x ] ph -> ( [ y / x ] x = y -> [ y / x ] ( x = y /\\ ph ) ) ) |\n| 5 | 1, 2, 4 | #P_e10 | |- (. [ y / x ] ph ->. [ y / x ] ( x = y /\\ ph ) ). |\n| 6 |  | #P_spsbe | |- ( [ y / x ] ( x = y /\\ ph ) -> E. x ( x = y /\\ ph ) ) |\n| 7 | 5, 6 | #P_e1a | |- (. [ y / x ] ph ->. E. x ( x = y /\\ ph ) ). |\n| 8 | 7 | #P_in1 | |- ( [ y / x ] ph -> E. x ( x = y /\\ ph ) ) |\n| 9 |  | #P_hbs1 | |- ( [ y / x ] ph -> A. x [ y / x ] ph ) |\n| 10 |  | #P_idn2 | |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ) ->. ( x = y /\\ ph ) ). |\n| 11 |  | #P_simpr | |- ( ( x = y /\\ ph ) -> ph ) |\n| 12 | 10, 11 | #P_e2 | |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ) ->. ph ). |\n| 13 |  | #P_simpl | |- ( ( x = y /\\ ph ) -> x = y ) |\n| 14 | 10, 13 | #P_e2 | |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ) ->. x = y ). |\n| 15 |  | #P_sbequ1 | |- ( x = y -> ( ph -> [ y / x ] ph ) ) |\n| 16 | 15 | #P_com12 | |- ( ph -> ( x = y -> [ y / x ] ph ) ) |\n| 17 | 12, 14, 16 | #P_e22 | |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ) ->. [ y / x ] ph ). |\n| 18 | 9, 17 | #P_exinst | |- ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ) |\n| 19 | 8, 18 | #P_pm3.2i | |- ( ( [ y / x ] ph -> E. x ( x = y /\\ ph ) ) /\\ ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ) ) |\n| 20 |  | #P_bi3 | |- ( ( [ y / x ] ph -> E. x ( x = y /\\ ph ) ) -> ( ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ) -> ( [ y / x ] ph <-> E. x ( x = y /\\ ph ) ) ) ) |\n| 21 | 20 | #P_imp | |- ( ( ( [ y / x ] ph -> E. x ( x = y /\\ ph ) ) /\\ ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ) ) -> ( [ y / x ] ph <-> E. x ( x = y /\\ ph ) ) ) |\n| 22 | 19, 21 | #P_e0a | |- ( [ y / x ] ph <-> E. x ( x = y /\\ ph ) ) |\n\\\n The following User's Proof is a Natural Deduction Sequent Calculus transcription of the Fitch-style Natural Deduction proof of Unit 20 Excercise 3.a., which is ~ sb5 , found in the \"Answers to Starred Exercises\" on page 457 of \"Understanding Symbolic Logic\", Fifth Edition (2008), by Virginia Klenk.  The same proof may also be interpreted as a Virtual Deduction Hilbert-style axiomatic proof.  It was completed automatically by the tools program completeusersproof.cmd, which invokes Mel L. O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant.  ~ sb5ALT is ~ sb5ALTVD without virtual deductions and was automatically derived from ~ sb5ALTVD . <HTML> <TABLE> <TR> <TD> 1::        <TD> ` |- (. [ y / x ] ph ->. [ y / x ] ph ). ` <TR> <TD> 2::        <TD> ` |- [ y / x ] x = y ` <TR> <TD> 3:1,2:     <TD> ` |- (. [ y / x ] ph ->. [ y / x ] ( x = y ` ` /\\ ph ) ). ` <TR> <TD> 4:3:       <TD> ` |- (. [ y / x ] ph ->.  E. x ( x = y /\\ ph ` ` ) ). ` <TR> <TD> 5:4:       <TD> ` |- ( [ y / x ] ph -> E. x ( x = y /\\ ph ) ` ` ) ` <TR> <TD> 6::        <TD> ` |- (. E. x ( x = y /\\ ph ) ->. E. x ( x = ` ` y /\\ ph ) ). ` <TR> <TD> 7::        <TD> ` |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ` ` ) ->. ( x = y /\\ ph ) ). ` <TR> <TD> 8:7:       <TD> ` |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ` ` ) ->. ph ). ` <TR> <TD> 9:7:       <TD> ` |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ` ` ) ->. x = y ). ` <TR> <TD> 10:8,9:    <TD> ` |- (. E. x ( x = y /\\ ph ) ,. ( x = y /\\ ph ` ` ) ->. [ y / x ] ph ). ` <TR> <TD> 101::      <TD> ` |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ` <TR> <TD> 11:101,10: <TD> ` |- ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ` ` ) ` <TR> <TD> 12:5,11:   <TD> ` |- ( ( [ y / x ] ph ->  E. x ( x = y /\\ ph ` ` ) ) /\\ ( E. x ( x = y /\\ ph ) -> [ y / x ] ph ) ) ` <TR> <TD> qed:12:    <TD> ` |- ( [ y / x ] ph <-> E. x ( x = y /\\ ph ) ` ` ) ` </TABLE> </HTML> (Contributed by Alan Sare, 21-Apr-2013.)  (Proof modification is discouraged.)  (New usage is discouraged.) ",
  "conclusion" : "#P_sb5",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wvd1--1", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd1--2", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd1--3", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wb", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd1--1", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd1--2", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd1--3", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd1--1", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd1--2", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd1--3", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wal", "#T_vx.wal", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd2--1", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--2", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--4", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wph", "#T_wvd2--1", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--2", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--3", "#T_wph", "#T_wvd2--4", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wvd2--1", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--2", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--3", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wvd2--4", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wph", "#T_wi", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd2--1", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--2", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wvd2--3", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wvd2--4", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wa", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wb", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wa", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wi", "#T_wsb--1", "#T_vy.tru", "#T_wsb--2", "#T_vx.wal", "#T_wsb--3", "#T_wph", "#T_wb", "#T_wex", "#T_vx.wal", "#T_vx.wal", "#T_wceq", "#T_vy.tru", "#T_wa", "#T_wph", "#T_wsb--1", "#T_vy", "#T_wsb--2", "#T_vx", "#T_wsb--3", "#T_wph", "#T_wb", "#T_wex", "#T_vx", "#T_vx", "#T_wceq", "#T_vy", "#T_wa", "#T_wph" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_sban", "#P_hbs1", "#P_exinst", "#P_spsbe", "#P_e0a", "#P_e2", "#P_e1a", "#P_com12", "#P_sbequ1", "#P_in1", "#P_bi3", "#P_imp", "#P_simplbi2com", "#P_idn2", "#P_idn1", "#P_equsb1", "#P_simpr", "#P_simpl", "#P_e22", "#P_pm3.2i", "#P_e10" ]
}