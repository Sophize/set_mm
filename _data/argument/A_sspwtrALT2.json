{
  "citations" : [ {
    "textCitation" : "[See sspwtrALT2 on Metamath](http://us.metamath.org/mpegif/sspwtrALT2.html)"
  } ],
  "argumentText" : "ARGUMENT\ny z\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_ssel | |- ( A C_ ~P A -> ( y e. A -> y e. ~P A ) ) |\n| 2 | 1 | #P_adantld | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> y e. ~P A ) ) |\n| 3 |  | #P_elpwi | |- ( y e. ~P A -> y C_ A ) |\n| 4 | 2, 3 | #P_syl6 | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> y C_ A ) ) |\n| 5 |  | #P_simpl | |- ( ( z e. y /\\ y e. A ) -> z e. y ) |\n| 6 | 5 | #P_a1i | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> z e. y ) ) |\n| 7 |  | #P_ssel | |- ( y C_ A -> ( z e. y -> z e. A ) ) |\n| 8 | 4, 6, 7 | #P_syl6c | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 9 | 8 | #P_alrimivv | |- ( A C_ ~P A -> A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 10 |  | #P_dftr2 | |- ( Tr A <-> A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 11 | 9, 10 | #P_sylibr | |- ( A C_ ~P A -> Tr A ) |\n\\\n Short predicate calculus proof of the right-to-left implication of ~ dftr4 .  A class which is a subclass of its power class is transitive.  This proof was constructed by applying Metamath's minimize command to the proof of ~ sspwtrALT , which is the virtual deduction proof ~ sspwtr without virtual deductions.  (Contributed by Alan Sare, 3-May-2011.)  (Proof modification is discouraged.) (New usage is discouraged.) ",
  "conclusion" : "#P_sspwtr",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vy", "#T_vz", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_vy.tru", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wb", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_cA", "#T_wss", "#T_cpw", "#T_cA", "#T_wi", "#T_wtr", "#T_cA" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_adantld", "#P_elpwi", "#P_alrimivv", "#P_syl6c", "#P_ssel", "#P_sylibr", "#P_dftr2", "#P_a1i", "#P_syl6", "#P_simpl" ]
}