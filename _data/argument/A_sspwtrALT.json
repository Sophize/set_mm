{
  "citations" : [ {
    "textCitation" : "[See sspwtrALT on Metamath](http://us.metamath.org/mpegif/sspwtrALT.html)"
  } ],
  "argumentText" : "ARGUMENT\ny z\n\n| Step | Hyp | Ref | Expression |\n|---|---|---|---|\n\n| 1 |  | #P_dftr2 | |- ( Tr A <-> A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 2 |  | #P_simpr | |- ( ( z e. y /\\ y e. A ) -> y e. A ) |\n| 3 |  | #P_ssel | |- ( A C_ ~P A -> ( y e. A -> y e. ~P A ) ) |\n| 4 |  | #P_elpwi | |- ( y e. ~P A -> y C_ A ) |\n| 5 | 2, 3, 4 | #P_syl56 | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> y C_ A ) ) |\n| 6 |  | #P_idd | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> ( z e. y /\\ y e. A ) ) ) |\n| 7 |  | #P_simpl | |- ( ( z e. y /\\ y e. A ) -> z e. y ) |\n| 8 | 6, 7 | #P_syl6 | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> z e. y ) ) |\n| 9 |  | #P_ssel | |- ( y C_ A -> ( z e. y -> z e. A ) ) |\n| 10 | 5, 8, 9 | #P_syl6c | |- ( A C_ ~P A -> ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 11 | 10 | #P_alrimivv | |- ( A C_ ~P A -> A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) ) |\n| 12 |  | #P_bi2 | |- ( ( Tr A <-> A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) ) -> ( A. z A. y ( ( z e. y /\\ y e. A ) -> z e. A ) -> Tr A ) ) |\n| 13 | 1, 11, 12 | #P_mpsyl | |- ( A C_ ~P A -> Tr A ) |\n| 14 | 13 | #P_idi | |- ( A C_ ~P A -> Tr A ) |\n\\\n Virtual deduction proof of ~ sspwtr .  This proof is the same as the proof of ~ sspwtr except each virtual deduction symbol is replaced by its non-virtual deduction symbol equivalent.  A class which is a subclass of its power class is transitive.  (Contributed by Alan Sare, 3-May-2011.)  (Proof modification is discouraged.) (New usage is discouraged.) ",
  "conclusion" : "#P_sspwtr",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_vy", "#T_vz", "#T_wtr", "#T_cA.wceq", "#T_wb", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_vy.tru", "#T_wcel", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_vy.tru", "#T_wss", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wtr", "#T_cA.wceq", "#T_wb", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_wal", "#T_vz", "#T_wal", "#T_vy.tru", "#T_vz", "#T_wcel", "#T_vy.tru", "#T_wa", "#T_vy.tru", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_vz", "#T_wcel", "#T_cA.wceq", "#T_wi", "#T_wtr", "#T_cA.wceq", "#T_cA.wceq", "#T_wss", "#T_cpw", "#T_cA.wceq", "#T_wi", "#T_wtr", "#T_cA.wceq", "#T_cA", "#T_wss", "#T_cpw", "#T_cA", "#T_wi", "#T_wtr", "#T_cA" ],
  "metaLanguage" : "METAMATH",
  "premises" : [ "#P_alrimivv", "#P_syl6c", "#P_dftr2", "#P_syl6", "#P_syl56", "#P_idi", "#P_elpwi", "#P_bi2", "#P_ssel", "#P_simpr", "#P_idd", "#P_simpl", "#P_mpsyl" ]
}