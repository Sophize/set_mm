{
  "citations" : [ {
    "textCitation" : "[See ldepslinc on Metamath](http://us.metamath.org/mpegif/ldepslinc.html)"
  } ],
  "names" : [ "ldepslinc" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wral--1", "#T_vm", "#T_wral--2", "#T_clvec", "#T_wral--1", "#T_vs", "#T_wral--2", "#T_cpw", "#T_cbs", "#T_cfv", "#T_vm", "#T_vs", "#T_clindeps", "#T_vm", "#T_wb", "#T_wrex--1", "#T_vv", "#T_wrex--2", "#T_vs", "#T_wrex--1", "#T_vf", "#T_wrex--2", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_vm", "#T_cmap", "#T_vs", "#T_cdif", "#T_csn--1", "#T_vv", "#T_csn--2", "#T_vf", "#T_cfsupp", "#T_c0g", "#T_cfv", "#T_csca", "#T_cfv", "#T_vm", "#T_wa", "#T_vf", "#T_clinc", "#T_cfv", "#T_vm", "#T_vs", "#T_cdif", "#T_csn--1", "#T_vv", "#T_csn--2", "#T_wceq", "#T_vv", "#T_wa", "#T_wn", "#T_wral--1", "#T_vm", "#T_wral--2", "#T_clmod", "#T_wral--1", "#T_vs", "#T_wral--2", "#T_cpw", "#T_cbs", "#T_cfv", "#T_vm", "#T_vs", "#T_clindeps", "#T_vm", "#T_wb", "#T_wrex--1", "#T_vv", "#T_wrex--2", "#T_vs", "#T_wrex--1", "#T_vf", "#T_wrex--2", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_vm", "#T_cmap", "#T_vs", "#T_cdif", "#T_csn--1", "#T_vv", "#T_csn--2", "#T_vf", "#T_cfsupp", "#T_c0g", "#T_cfv", "#T_csca", "#T_cfv", "#T_vm", "#T_wa", "#T_vf", "#T_clinc", "#T_cfv", "#T_vm", "#T_vs", "#T_cdif", "#T_csn--1", "#T_vv", "#T_csn--2", "#T_wceq", "#T_vv", "#T_vf", "#T_vm", "#T_vs", "#T_vv" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " For (left) vector spaces, ~ isldepslvec2 provides an alternative definition of being a linearly dependent subset, whereas ~ ldepsnlinc indicates that there is not an analogous alternative definition for arbitrary (left) modules.  (Contributed by AV, 25-May-2019.)  (Revised by AV, 30-Jul-2019.) ",
  "statement" : "ldepslinc $p |- ( A. m e. LVec A. s e. ~P ( Base ` m ) ( s linDepS m <-> E. v e. s E. f e. ( ( Base ` ( Scalar ` m ) ) ^m ( s \\ { v } ) ) ( f finSupp ( 0g ` ( Scalar ` m ) ) /\\ ( f ( linC ` m ) ( s \\ { v } ) ) = v ) ) /\\ -. A. m e. LMod A. s e. ~P ( Base ` m ) ( s linDepS m <-> E. v e. s E. f e. ( ( Base ` ( Scalar ` m ) ) ^m ( s \\ { v } ) ) ( f finSupp ( 0g ` ( Scalar ` m ) ) /\\ ( f ( linC ` m ) ( s \\ { v } ) ) = v ) ) ) $.\n$d f m s v $."
}