{
  "citations" : [ {
    "textCitation" : "[See df-cleq on Metamath](http://us.metamath.org/mpegif/df-cleq.html)"
  } ],
  "names" : [ "df-cleq" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wal", "#T_vx", "#T_vx", "#T_wcel", "#T_vy", "#T_wb", "#T_vx", "#T_wcel", "#T_vz", "#T_wi", "#T_vy", "#T_wceq", "#T_vz", "#T_cA", "#T_wceq", "#T_cB", "#T_wb", "#T_wal", "#T_vx", "#T_vx", "#T_wcel", "#T_cA", "#T_wb", "#T_vx", "#T_wcel", "#T_cB", "#T_cA", "#T_vx", "#T_cB", "#T_vx", "#T_vx", "#T_vy", "#T_vz" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define the equality connective between classes.  Definition 2.7 of [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4 provides its justification and methods for eliminating it.  Note that its elimination will not necessarily result in a single wff in the original language but possibly a \"scheme\" of wffs. This is an example of a somewhat \"risky\" definition, meaning that it has a more complex than usual soundness justification (outside of Metamath), because it \"overloads\" or reuses the existing equality symbol rather than introducing a new symbol.  This allows us to make statements that may not hold for the original symbol.  For example, it permits us to deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem of logic but rather presupposes the Axiom of Extensionality (see theorem ~ axext4 ).  We therefore include this axiom as a hypothesis, so that the use of Extensionality is properly indicated. We could avoid this complication by introducing a new symbol, say =_2, in place of ` = ` .  This would also have the advantage of making elimination of the definition straightforward, so that we could eliminate Extensionality as a hypothesis.  We would then also have the advantage of being able to identify in various proofs exactly where Extensionality truly comes into play rather than just being an artifact of a definition.  One of our theorems would then be ` x ` =_2 ` y <-> x = y ` by invoking Extensionality. However, to conform to literature usage, we retain this overloaded definition.  This also makes some proofs shorter and probably easier to read, without the constant switching between two kinds of equality. See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 . In the form of ~ dfcleq , this is called the \"axiom of extensionality\" by [Levy] p. 338, who treats the theory of classes as an extralogical extension to our logic and set theory axioms. While the three class definitions ~ df-clab , ~ df-cleq , and ~ df-clel are eliminable and conservative and thus meet the requirements for sound definitions, they are technically axioms in that they do not satisfy the requirements for the current definition checker.  The proofs of conservativity require external justification that is beyond the scope of the definition checker. For a general discussion of the theory of classes, see ~ http://us.metamath.org/mpeuni/mmset.html#class .  (Contributed by NM, 15-Sep-1993.) \n\n---\n\n Define the equality connective between classes.  Definition 2.7 of [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4 provides its justification and methods for eliminating it.  Note that its elimination will not necessarily result in a single wff in the original language but possibly a \"scheme\" of wffs. This is an example of a somewhat \"risky\" definition, meaning that it has a more complex than usual soundness justification (outside of Metamath), because it \"overloads\" or reuses the existing equality symbol rather than introducing a new symbol.  This allows us to make statements that may not hold for the original symbol.  For example, it permits us to deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem of logic but rather presupposes the Axiom of Extensionality (see theorem ~ axext4 ).  We therefore include this axiom as a hypothesis, so that the use of Extensionality is properly indicated. We could avoid this complication by introducing a new symbol, say =_2, in place of ` = ` .  This would also have the advantage of making elimination of the definition straightforward, so that we could eliminate Extensionality as a hypothesis.  We would then also have the advantage of being able to identify in various proofs exactly where Extensionality truly comes into play rather than just being an artifact of a definition.  One of our theorems would then be ` x ` =_2 ` y <-> x = y ` by invoking Extensionality. However, to conform to literature usage, we retain this overloaded definition.  This also makes some proofs shorter and probably easier to read, without the constant switching between two kinds of equality. See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 . In the form of ~ dfcleq , this is called the \"axiom of extensionality\" by [Levy] p. 338, who treats the theory of classes as an extralogical extension to our logic and set theory axioms. For a general discussion of the theory of classes, see ~ http://us.metamath.org/mpeuni/mmset.html#class .  (Contributed by NM, 15-Sep-1993.) ",
  "statement" : "df-cleq.1 $e |- ( A. x ( x e. y <-> x e. z ) -> y = z ) $.\ndf-cleq $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $.\n$d A x $.\n$d B x $.\n$d x y z $."
}