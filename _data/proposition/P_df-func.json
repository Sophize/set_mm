{
  "citations" : [ {
    "textCitation" : "[See df-func on Metamath](http://us.metamath.org/mpegif/df-func.html)"
  } ],
  "names" : [ "df-func" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cfunc", "#T_wceq", "#T_vt", "#T_cmpt2--1", "#T_ccat", "#T_cmpt2--2", "#T_vu", "#T_cmpt2--3", "#T_ccat", "#T_cmpt2--4", "#T_copab--1", "#T_copab--2", "#T_vf", "#T_copab--3", "#T_vg", "#T_copab--4", "#T_copab--5", "#T_wsbc--1", "#T_cbs", "#T_cfv", "#T_vt", "#T_wsbc--2", "#T_vb", "#T_wsbc--3", "#T_vf", "#T_wf--1", "#T_vb", "#T_wf--2", "#T_cbs", "#T_cfv", "#T_vu", "#T_w3a--1", "#T_vg", "#T_wcel", "#T_cixp--1", "#T_vz", "#T_cixp--2", "#T_vb", "#T_cxp", "#T_vb", "#T_vf", "#T_cfv", "#T_c1st", "#T_cfv", "#T_vz", "#T_chom", "#T_cfv", "#T_vu", "#T_vf", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vz", "#T_cmap", "#T_chom", "#T_cfv", "#T_vt", "#T_cfv", "#T_vz", "#T_w3a--2", "#T_wral--1", "#T_vx", "#T_wral--2", "#T_vb", "#T_vx", "#T_vg", "#T_vx", "#T_cfv", "#T_ccid", "#T_cfv", "#T_vt", "#T_cfv", "#T_vx", "#T_wceq", "#T_ccid", "#T_cfv", "#T_vu", "#T_cfv", "#T_vf", "#T_cfv", "#T_vx", "#T_wa", "#T_wral--1", "#T_vy", "#T_wral--2", "#T_vb", "#T_wral--1", "#T_vz", "#T_wral--2", "#T_vb", "#T_wral--1", "#T_vm", "#T_wral--2", "#T_vx", "#T_chom", "#T_cfv", "#T_vt", "#T_vy", "#T_wral--1", "#T_vn", "#T_wral--2", "#T_vy", "#T_chom", "#T_cfv", "#T_vt", "#T_vz", "#T_vx", "#T_vg", "#T_vz", "#T_cfv", "#T_vn", "#T_cop--1", "#T_vx", "#T_cop--2", "#T_vy", "#T_cop--3", "#T_cco", "#T_cfv", "#T_vt", "#T_vz", "#T_vm", "#T_wceq", "#T_vy", "#T_vg", "#T_vz", "#T_cfv", "#T_vn", "#T_cop--1", "#T_vf", "#T_cfv", "#T_vx", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vy", "#T_cop--3", "#T_cco", "#T_cfv", "#T_vu", "#T_vf", "#T_cfv", "#T_vz", "#T_vx", "#T_vg", "#T_vy", "#T_cfv", "#T_vm", "#T_copab--6", "#T_vb", "#T_vf", "#T_vg", "#T_vm", "#T_vn", "#T_vt", "#T_vu", "#T_vx", "#T_vy", "#T_vz" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Function returning all the functors from a category ` t ` to a category ` u ` .  Definition 3.17 of [Adamek] p. 29, and definition in [Lang] p. 62 (\"covariant functor\").  Intuitively a functor associates any morphism of ` t ` to a morphism of ` u ` , any object of ` t ` to an object of ` u ` , and respects the identity, the composition, the domain and the codomain.  Here to capture the idea that a functor associates any object of ` t ` to an object of ` u ` we write it associates any identity of ` t ` to an identity of ` u ` which simplifies the definition.  According to remark 3.19 in [Adamek] p. 30, \"a functor F : A -> B is technically a family of functions; one from Ob(A) to Ob(B) [here: f, called \"the object part\" in the following], and for each pair (A,A') of A-objects, one from hom(A,A') to hom(FA, FA') [here: g, called \"the morphism part\" in the following]\".  (Contributed by FL, 10-Feb-2008.)  (Revised by Mario Carneiro, 2-Jan-2017.) ",
  "statement" : "df-func $p |- Func = ( t e. Cat , u e. Cat |-> { <. f , g >. | [. ( Base ` t ) / b ]. ( f : b --> ( Base ` u ) /\\ g e. X_ z e. ( b X. b ) ( ( ( f ` ( 1st ` z ) ) ( Hom ` u ) ( f ` ( 2nd ` z ) ) ) ^m ( ( Hom ` t ) ` z ) ) /\\ A. x e. b ( ( ( x g x ) ` ( ( Id ` t ) ` x ) ) = ( ( Id ` u ) ` ( f ` x ) ) /\\ A. y e. b A. z e. b A. m e. ( x ( Hom ` t ) y ) A. n e. ( y ( Hom ` t ) z ) ( ( x g z ) ` ( n ( <. x , y >. ( comp ` t ) z ) m ) ) = ( ( ( y g z ) ` n ) ( <. ( f ` x ) , ( f ` y ) >. ( comp ` u ) ( f ` z ) ) ( ( x g y ) ` m ) ) ) ) } ) $.\n$d b f g m n t u x y z $."
}