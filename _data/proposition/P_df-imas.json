{
  "citations" : [ {
    "textCitation" : "[See df-imas on Metamath](http://us.metamath.org/mpegif/df-imas.html)"
  } ],
  "names" : [ "df-imas" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cimas", "#T_wceq", "#T_vf", "#T_cmpt2--1", "#T_cvv", "#T_cmpt2--2", "#T_vr", "#T_cmpt2--3", "#T_cvv", "#T_cmpt2--4", "#T_csb--1", "#T_cbs", "#T_cfv", "#T_vr", "#T_csb--2", "#T_vv", "#T_csb--3", "#T_ctp--1", "#T_cop--1", "#T_cbs", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_crn", "#T_vf", "#T_cop--3", "#T_ctp--2", "#T_cop--1", "#T_cplusg", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ciun--1", "#T_vp", "#T_ciun--2", "#T_vv", "#T_ciun--1", "#T_vq", "#T_ciun--2", "#T_vv", "#T_csn--1", "#T_cop--1", "#T_cop--1", "#T_vf", "#T_cfv", "#T_vp", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vq", "#T_cop--3", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vp", "#T_cplusg", "#T_cfv", "#T_vr", "#T_vq", "#T_cop--3", "#T_csn--2", "#T_cop--3", "#T_ctp--3", "#T_cop--1", "#T_cmulr", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ciun--1", "#T_vp", "#T_ciun--2", "#T_vv", "#T_ciun--1", "#T_vq", "#T_ciun--2", "#T_vv", "#T_csn--1", "#T_cop--1", "#T_cop--1", "#T_vf", "#T_cfv", "#T_vp", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vq", "#T_cop--3", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vp", "#T_cmulr", "#T_cfv", "#T_vr", "#T_vq", "#T_cop--3", "#T_csn--2", "#T_cop--3", "#T_ctp--4", "#T_cun", "#T_ctp--1", "#T_cop--1", "#T_csca", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_csca", "#T_cfv", "#T_vr", "#T_cop--3", "#T_ctp--2", "#T_cop--1", "#T_cvsca", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ciun--1", "#T_vq", "#T_ciun--2", "#T_vv", "#T_vp", "#T_cmpt2--1", "#T_cbs", "#T_cfv", "#T_csca", "#T_cfv", "#T_vr", "#T_cmpt2--2", "#T_vx", "#T_cmpt2--3", "#T_csn--1", "#T_vf", "#T_cfv", "#T_vq", "#T_csn--2", "#T_cmpt2--4", "#T_vf", "#T_cfv", "#T_vp", "#T_cvsca", "#T_cfv", "#T_vr", "#T_vq", "#T_cop--3", "#T_ctp--3", "#T_cop--1", "#T_cip", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ciun--1", "#T_vp", "#T_ciun--2", "#T_vv", "#T_ciun--1", "#T_vq", "#T_ciun--2", "#T_vv", "#T_csn--1", "#T_cop--1", "#T_cop--1", "#T_vf", "#T_cfv", "#T_vp", "#T_cop--2", "#T_vf", "#T_cfv", "#T_vq", "#T_cop--3", "#T_cop--2", "#T_vp", "#T_cip", "#T_cfv", "#T_vr", "#T_vq", "#T_cop--3", "#T_csn--2", "#T_cop--3", "#T_ctp--4", "#T_cun", "#T_ctp--1", "#T_cop--1", "#T_cts", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ctopn", "#T_cfv", "#T_vr", "#T_cqtop", "#T_vf", "#T_cop--3", "#T_ctp--2", "#T_cop--1", "#T_cple", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_vf", "#T_ccom", "#T_cple", "#T_cfv", "#T_vr", "#T_ccom", "#T_ccnv", "#T_vf", "#T_cop--3", "#T_ctp--3", "#T_cop--1", "#T_cds", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_vx", "#T_cmpt2--1", "#T_crn", "#T_vf", "#T_cmpt2--2", "#T_vy", "#T_cmpt2--3", "#T_crn", "#T_vf", "#T_cmpt2--4", "#T_csup--1", "#T_ciun--1", "#T_vn", "#T_ciun--2", "#T_cn", "#T_crn", "#T_vg", "#T_cmpt--1", "#T_crab--1", "#T_vh", "#T_crab--2", "#T_vv", "#T_cxp", "#T_vv", "#T_cmap", "#T_c1", "#T_cfz", "#T_vn", "#T_crab--3", "#T_vf", "#T_cfv", "#T_c1st", "#T_cfv", "#T_vh", "#T_cfv", "#T_c1", "#T_wceq", "#T_vx", "#T_w3a--1", "#T_vf", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vh", "#T_cfv", "#T_vn", "#T_wceq", "#T_vy", "#T_w3a--2", "#T_wral--1", "#T_vi", "#T_wral--2", "#T_c1", "#T_cfz", "#T_vn", "#T_cmin", "#T_c1", "#T_vf", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vh", "#T_cfv", "#T_vi", "#T_wceq", "#T_vf", "#T_cfv", "#T_c1st", "#T_cfv", "#T_vh", "#T_cfv", "#T_vi", "#T_caddc", "#T_c1", "#T_crab--4", "#T_cmpt--2", "#T_cxrs", "#T_cgsu", "#T_cds", "#T_cfv", "#T_vr", "#T_ccom", "#T_vg", "#T_csup--2", "#T_cxr", "#T_csup--3", "#T_ccnv", "#T_clt", "#T_cop--3", "#T_ctp--4", "#T_vf", "#T_vg", "#T_vh", "#T_vi", "#T_vn", "#T_vp", "#T_vq", "#T_vr", "#T_vv", "#T_vx", "#T_vy" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define an image structure, which takes a structure and a function on the base set, and maps all the operations via the function.  For this to work properly ` f ` must either be injective or satisfy the well-definedness condition ` f ( a ) = f ( c ) /\\ f ( b ) = f ( d ) -> ` ` f ( a + b ) = f ( c + d ) ` for each relevant operation. Note that although we call this an \"image\" by association to ~ df-ima , in order to keep the definition simple we consider only the case when the domain of ` F ` is equal to the base set of ` R ` .  Other cases can be achieved by restricting ` F ` (with ~ df-res ) and/or ` R ` ( with ~ df-ress ) to their common domain.  (Contributed by Mario Carneiro, 23-Feb-2015.) ",
  "statement" : "df-imas $p |- \"s = ( f e. _V , r e. _V |-> [_ ( Base ` r ) / v ]_ ( ( { <. ( Base ` ndx ) , ran f >. , <. ( +g ` ndx ) , U_ p e. v U_ q e. v { <. <. ( f ` p ) , ( f ` q ) >. , ( f ` ( p ( +g ` r ) q ) ) >. } >. , <. ( .r ` ndx ) , U_ p e. v U_ q e. v { <. <. ( f ` p ) , ( f ` q ) >. , ( f ` ( p ( .r ` r ) q ) ) >. } >. } u. { <. ( Scalar ` ndx ) , ( Scalar ` r ) >. , <. ( .s ` ndx ) , U_ q e. v ( p e. ( Base ` ( Scalar ` r ) ) , x e. { ( f ` q ) } |-> ( f ` ( p ( .s ` r ) q ) ) ) >. , <. ( .i ` ndx ) , U_ p e. v U_ q e. v { <. <. ( f ` p ) , ( f ` q ) >. , ( p ( .i ` r ) q ) >. } >. } ) u. { <. ( TopSet ` ndx ) , ( ( TopOpen ` r ) qTop f ) >. , <. ( le ` ndx ) , ( ( f o. ( le ` r ) ) o. `' f ) >. , <. ( dist ` ndx ) , ( x e. ran f , y e. ran f |-> sup ( U_ n e. NN ran ( g e. { h e. ( ( v X. v ) ^m ( 1 ... n ) ) | ( ( f ` ( 1st ` ( h ` 1 ) ) ) = x /\\ ( f ` ( 2nd ` ( h ` n ) ) ) = y /\\ A. i e. ( 1 ... ( n - 1 ) ) ( f ` ( 2nd ` ( h ` i ) ) ) = ( f ` ( 1st ` ( h ` ( i + 1 ) ) ) ) ) } |-> ( RR*s gsum ( ( dist ` r ) o. g ) ) ) , RR* , `' < ) ) >. } ) ) $.\n$d f g h i n p q r v x y $."
}