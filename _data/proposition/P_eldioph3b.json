{
  "citations" : [ {
    "textCitation" : "[See eldioph3b on Metamath](http://us.metamath.org/mpegif/eldioph3b.html)"
  } ],
  "names" : [ "eldioph3b" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cA", "#T_wcel", "#T_cdioph", "#T_cfv", "#T_cN", "#T_wb", "#T_cN", "#T_wcel", "#T_cn0", "#T_wa", "#T_wrex--1", "#T_vp", "#T_wrex--2", "#T_cmzp", "#T_cfv", "#T_cn", "#T_cA", "#T_wceq", "#T_cab--1", "#T_vt", "#T_cab--2", "#T_wrex--1", "#T_vu", "#T_wrex--2", "#T_cn0", "#T_cmap", "#T_cn", "#T_vt", "#T_wceq", "#T_vu", "#T_cres", "#T_c1", "#T_cfz", "#T_cN", "#T_wa", "#T_vp", "#T_cfv", "#T_vu", "#T_wceq", "#T_cc0", "#T_cab--3", "#T_cA", "#T_vp", "#T_vt", "#T_vu", "#T_cN", "#T_vp", "#T_vt", "#T_vu" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define Diophantine sets in terms of polynomials with variables indexed by ` NN ` .  This avoids a quantifier over the number of witness variables and will be easier to use than ~ eldiophb in most cases. (Contributed by Stefan O'Rear, 10-Oct-2014.) ",
  "statement" : "eldioph3b $p |- ( A e. ( Dioph ` N ) <-> ( N e. NN0 /\\ E. p e. ( mzPoly ` NN ) A = { t | E. u e. ( NN0 ^m NN ) ( t = ( u |` ( 1 ... N ) ) /\\ ( p ` u ) = 0 ) } ) ) $.\n$d A p t u $.\n$d N p t u $."
}