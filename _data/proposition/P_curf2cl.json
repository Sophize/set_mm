{
  "citations" : [ {
    "textCitation" : "[See curf2cl on Metamath](http://us.metamath.org/mpegif/curf2cl.html)"
  } ],
  "names" : [ "curf2cl" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cG", "#T_wceq", "#T_cop--1", "#T_cC", "#T_cop--2", "#T_cD", "#T_cop--3", "#T_ccurf", "#T_cF", "#T_cA", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cC", "#T_wph", "#T_wi", "#T_cC", "#T_wcel", "#T_ccat", "#T_wph", "#T_wi", "#T_cD", "#T_wcel", "#T_ccat", "#T_wph", "#T_wi", "#T_cF", "#T_wcel", "#T_cC", "#T_cxpc", "#T_cD", "#T_cfunc", "#T_cE", "#T_cB", "#T_wceq", "#T_cbs", "#T_cfv", "#T_cD", "#T_cH", "#T_wceq", "#T_chom", "#T_cfv", "#T_cC", "#T_cI", "#T_wceq", "#T_ccid", "#T_cfv", "#T_cD", "#T_wph", "#T_wi", "#T_cX", "#T_wcel", "#T_cA", "#T_wph", "#T_wi", "#T_cY", "#T_wcel", "#T_cA", "#T_wph", "#T_wi", "#T_cK", "#T_wcel", "#T_cX", "#T_cH", "#T_cY", "#T_cL", "#T_wceq", "#T_cX", "#T_c2nd", "#T_cfv", "#T_cG", "#T_cY", "#T_cfv", "#T_cK", "#T_cN", "#T_wceq", "#T_cD", "#T_cnat", "#T_cE", "#T_wph", "#T_wi", "#T_cL", "#T_wcel", "#T_c1st", "#T_cfv", "#T_cG", "#T_cfv", "#T_cX", "#T_cN", "#T_c1st", "#T_cfv", "#T_cG", "#T_cfv", "#T_cY" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " The curry functor at a morphism is a natural transformation. (Contributed by Mario Carneiro, 13-Jan-2017.) ",
  "statement" : "curf2.g $e |- G = ( <. C , D >. curryF F ) $.\ncurf2.a $e |- A = ( Base ` C ) $.\ncurf2.c $e |- ( ph -> C e. Cat ) $.\ncurf2.d $e |- ( ph -> D e. Cat ) $.\ncurf2.f $e |- ( ph -> F e. ( ( C Xc. D ) Func E ) ) $.\ncurf2.b $e |- B = ( Base ` D ) $.\ncurf2.h $e |- H = ( Hom ` C ) $.\ncurf2.i $e |- I = ( Id ` D ) $.\ncurf2.x $e |- ( ph -> X e. A ) $.\ncurf2.y $e |- ( ph -> Y e. A ) $.\ncurf2.k $e |- ( ph -> K e. ( X H Y ) ) $.\ncurf2.l $e |- L = ( ( X ( 2nd ` G ) Y ) ` K ) $.\ncurf2.n $e |- N = ( D Nat E ) $.\ncurf2cl $p |- ( ph -> L e. ( ( ( 1st ` G ) ` X ) N ( ( 1st ` G ) ` Y ) ) ) $."
}