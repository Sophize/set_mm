{
  "citations" : [ {
    "textCitation" : "[See df-evlf on Metamath](http://us.metamath.org/mpegif/df-evlf.html)"
  } ],
  "names" : [ "df-evlf" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cevlf", "#T_wceq", "#T_vc", "#T_cmpt2--1", "#T_ccat", "#T_cmpt2--2", "#T_vd", "#T_cmpt2--3", "#T_ccat", "#T_cmpt2--4", "#T_cop--1", "#T_vf", "#T_cmpt2--1", "#T_vc", "#T_cfunc", "#T_vd", "#T_cmpt2--2", "#T_vx", "#T_cmpt2--3", "#T_cbs", "#T_cfv", "#T_vc", "#T_cmpt2--4", "#T_c1st", "#T_cfv", "#T_vf", "#T_cfv", "#T_vx", "#T_cop--2", "#T_vx", "#T_cmpt2--1", "#T_vc", "#T_cfunc", "#T_vd", "#T_cxp", "#T_cbs", "#T_cfv", "#T_vc", "#T_cmpt2--2", "#T_vy", "#T_cmpt2--3", "#T_vc", "#T_cfunc", "#T_vd", "#T_cxp", "#T_cbs", "#T_cfv", "#T_vc", "#T_cmpt2--4", "#T_csb--1", "#T_c1st", "#T_cfv", "#T_vx", "#T_csb--2", "#T_vm", "#T_csb--3", "#T_csb--1", "#T_c1st", "#T_cfv", "#T_vy", "#T_csb--2", "#T_vn", "#T_csb--3", "#T_va", "#T_cmpt2--1", "#T_vm", "#T_vc", "#T_cnat", "#T_vd", "#T_vn", "#T_cmpt2--2", "#T_vg", "#T_cmpt2--3", "#T_c2nd", "#T_cfv", "#T_vx", "#T_chom", "#T_cfv", "#T_vc", "#T_c2nd", "#T_cfv", "#T_vy", "#T_cmpt2--4", "#T_va", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vy", "#T_cop--1", "#T_c1st", "#T_cfv", "#T_vm", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vx", "#T_cop--2", "#T_c1st", "#T_cfv", "#T_vm", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vy", "#T_cop--3", "#T_cco", "#T_cfv", "#T_vd", "#T_c1st", "#T_cfv", "#T_vn", "#T_cfv", "#T_c2nd", "#T_cfv", "#T_vy", "#T_c2nd", "#T_cfv", "#T_vx", "#T_c2nd", "#T_cfv", "#T_vm", "#T_c2nd", "#T_cfv", "#T_vy", "#T_cfv", "#T_vg", "#T_cop--3", "#T_va", "#T_vc", "#T_vd", "#T_vf", "#T_vg", "#T_vm", "#T_vn", "#T_vx", "#T_vy" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define the evaluation functor, which is the extension of the evaluation map ` f , x |-> ( f `` x ) ` of functors, to a functor ` ( C --> D ) X. C --> D ` .  (Contributed by Mario Carneiro, 11-Jan-2017.) ",
  "statement" : "df-evlf $p |- evalF = ( c e. Cat , d e. Cat |-> <. ( f e. ( c Func d ) , x e. ( Base ` c ) |-> ( ( 1st ` f ) ` x ) ) , ( x e. ( ( c Func d ) X. ( Base ` c ) ) , y e. ( ( c Func d ) X. ( Base ` c ) ) |-> [_ ( 1st ` x ) / m ]_ [_ ( 1st ` y ) / n ]_ ( a e. ( m ( c Nat d ) n ) , g e. ( ( 2nd ` x ) ( Hom ` c ) ( 2nd ` y ) ) |-> ( ( a ` ( 2nd ` y ) ) ( <. ( ( 1st ` m ) ` ( 2nd ` x ) ) , ( ( 1st ` m ) ` ( 2nd ` y ) ) >. ( comp ` d ) ( ( 1st ` n ) ` ( 2nd ` y ) ) ) ( ( ( 2nd ` x ) ( 2nd ` m ) ( 2nd ` y ) ) ` g ) ) ) ) >. ) $.\n$d a c d f g m n x y $."
}