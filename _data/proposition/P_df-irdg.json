{
  "citations" : [ {
    "textCitation" : "[See df-irdg on Metamath](http://us.metamath.org/mpegif/df-irdg.html)"
  } ],
  "names" : [ "df-irdg" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_crdg--1", "#T_cF", "#T_crdg--2", "#T_cI", "#T_wceq", "#T_crecs", "#T_vg", "#T_cmpt--1", "#T_cvv", "#T_cmpt--2", "#T_cI", "#T_cun", "#T_ciun--1", "#T_vx", "#T_ciun--2", "#T_cdm", "#T_vg", "#T_cF", "#T_cfv", "#T_vg", "#T_cfv", "#T_vx", "#T_cF", "#T_vg", "#T_vx", "#T_cI", "#T_vg", "#T_vx" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define a recursive definition generator on ` On ` (the class of ordinal numbers) with characteristic function ` F ` and initial value ` I ` . This rather amazing operation allows us to define, with compact direct definitions, functions that are usually defined in textbooks only with indirect self-referencing recursive definitions.  A recursive definition requires advanced metalogic to justify - in particular, eliminating a recursive definition is very difficult and often not even shown in textbooks.  On the other hand, the elimination of a direct definition is a matter of simple mechanical substitution.  The price paid is the daunting complexity of our ` rec ` operation (especially when ~ df-recs that it is built on is also eliminated).  But once we get past this hurdle, definitions that would otherwise be recursive become relatively simple.  In classical logic it would be easier to divide this definition into cases based on whether the domain of ` g ` is zero, a successor, or a limit ordinal.  Cases do not (in general) work that way in intuitionistic logic, so instead we choose a definition which takes the union of all the results of the characteristic function for ordinals in the domain of ` g ` .  This means that this definition has the expected properties for increasing and continuous ordinal functions, which include ordinal addition and multiplication. For finite recursion we also define ~ df-frec and for suitable characteristic functions ~ df-frec yields the same result as ` rec ` restricted to ` _om ` , as seen at ~ frecrdg . _Note:  We introduce_ ` rec ` _with the philosophical goal of being_ _able to eliminate all definitions with direct mechanical substitution_ _and to verify easily the soundness of definitions.  Metamath itself_ _has no built-in technical limitation that prevents multiple-part_ _recursive definitions in the traditional textbook style_.  (Contributed by Jim Kingdon, 19-May-2019.) ",
  "statement" : "df-irdg $p |- rec ( F , I ) = recs ( ( g e. _V |-> ( I u. U_ x e. dom g ( F ` ( g ` x ) ) ) ) ) $.\n$d F g x $.\n$d I g x $."
}