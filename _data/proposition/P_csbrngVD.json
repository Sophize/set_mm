{
  "citations" : [ {
    "textCitation" : "[See csbrngVD on Metamath](http://us.metamath.org/mpegif/csbrngVD.html)"
  } ],
  "names" : [ "csbrngVD" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cA", "#T_wcel", "#T_cV", "#T_wi", "#T_csb--1", "#T_cA", "#T_csb--2", "#T_vx", "#T_csb--3", "#T_crn", "#T_cB", "#T_wceq", "#T_crn", "#T_csb--1", "#T_cA", "#T_csb--2", "#T_vx", "#T_csb--3", "#T_cB" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Virtual deduction proof of ~ csbrngOLD . The following User's Proof is a Virtual Deduction proof completed automatically by the tools program completeusersproof.cmd, which invokes Mel L. O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. ~ csbrngOLD is ~ csbrngVD without virtual deductions and was automatically derived from ~ csbrngVD . <HTML> <TABLE> <TR> <TD> 1::       <TD> ` |- (. A e. V ->. A e. V ). ` <TR> <TD> 2:1:      <TD> ` |- (. A e. V ->. ( [. A / x ]. <. w ,. y >. ` ` e. B <-> [_ A / x ]_ <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 3:1:      <TD> ` |- (. A e. V ->. [_ A / x ]_ <. w ,. y >. = ` ` <. w , y >. ). ` <TR> <TD> 4:3:      <TD> ` |- (. A e. V ->. ( [_ A / x ]_ <. w ,. y >. ` ` e. [_ A / x ]_ B <->  <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 5:2,4:    <TD> ` |- (. A e. V ->. ( [. A / x ]. <. w ,. y >. ` ` e. B <-> <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 6:5:      <TD> ` |- (. A e. V ->. A. w ( [. A / x ]. <. w ,. ` ` y >. e. B <-> <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 7:6:      <TD> ` |- (. A e. V ->. ( E. w [. A / x ]. <. w ,. ` ` y >. e. B <-> E. w <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 8:1:      <TD> ` |- (. A e. V ->. ( E. w [. A / x ]. <. w ,. ` ` y >. e. B <-> [. A / x ]. E. w  <. w , y >. e. B ) ). ` <TR> <TD> 9:7,8:    <TD> ` |- (. A e. V ->. ( [. A / x ]. E. w  <. w ` ` ,. y >. e. B <-> E. w <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 10:9:     <TD> ` |- (. A e. V ->. A. y ( [. A / x ]. E. w ` `  <. w , y >. e. B <-> E. w <. w , y >. e. [_ A / x ]_ B ) ). ` <TR> <TD> 11:10:    <TD> ` |- (. A e. V ->. { y | [. A / x ]. E. w  <. ` ` w , y >. e. B } = { y | E. w <. w , y >. e. [_ A / x ]_ B } ). ` <TR> <TD> 12:1:     <TD> ` |- (. A e. V ->. [_ A / x ]_ { y |  E. w ` ` <. w , y >. e. B } = { y | [. A / x ]. E. w  <. w , y >. e. B } ). ` <TR> <TD> 13:11,12: <TD> ` |- (. A e. V ->. [_ A / x ]_ { y |  E. w ` ` <. w , y >. e. B } = { y | E. w <. w , y >. e. [_ A / x ]_ B } ). ` <TR> <TD> 14::      <TD> ` |- ran B = { y |  E. w  <. w ,. y >. e. B } ` <TR> <TD> 15:14:    <TD> ` |- A. x ran B = { y |  E. w  <. w ,. y >. ` ` e. B } ` <TR> <TD> 16:1,15:  <TD> ` |- (. A e. V ->. [_ A / x ]_ ran B = [_ A / ` ` x ]_ { y |  E. w  <. w , y >. e. B } ). ` <TR> <TD> 17:13,16: <TD> ` |- (. A e. V ->. [_ A / x ]_ ran B = { y | ` ` E. w <. w , y >. e. [_ A / x ]_ B } ). ` <TR> <TD> 18::      <TD> ` |-  ran [_ A / x ]_ B = { y |  E. w  <. w ` ` ,. y >. e. [_ A / x ]_ B } ` <TR> <TD> 19:17,18: <TD> ` |- (. A e. V ->. [_ A / x ]_ ran B = ran [_ ` ` A / x ]_ B ). ` <TR> <TD> qed:19:   <TD> ` |- ( A e. V -> [_ A / x ]_ ran B = ran [_ A ` ` / x ]_ B ) ` </TABLE> </HTML> (Contributed by Alan Sare, 10-Nov-2012.)  (Proof modification is discouraged.)  (New usage is discouraged.) ",
  "statement" : "csbrngVD $p |- ( A e. V -> [_ A / x ]_ ran B = ran [_ A / x ]_ B ) $."
}