{
  "citations" : [ {
    "textCitation" : "[See df-struct on Metamath](http://us.metamath.org/mpegif/df-struct.html)"
  } ],
  "names" : [ "df-struct" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cstr", "#T_wceq", "#T_copab--1", "#T_copab--2", "#T_vf", "#T_copab--3", "#T_vx", "#T_copab--4", "#T_copab--5", "#T_vx", "#T_wcel", "#T_cle", "#T_cin", "#T_cn", "#T_cxp", "#T_cn", "#T_w3a--1", "#T_wfun", "#T_vf", "#T_cdif", "#T_csn--1", "#T_c0", "#T_csn--2", "#T_w3a--2", "#T_cdm", "#T_vf", "#T_wss", "#T_cfz", "#T_cfv", "#T_vx", "#T_copab--6", "#T_vf", "#T_vx" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define a structure with components in ` M ... N ` .  This is not a requirement for groups, posets, etc., but it is a useful assumption for component extraction theorems.  (Contributed by Mario Carneiro, 29-Aug-2015.) ",
  "statement" : "df-struct $p |- Struct = { <. f , x >. | ( x e. ( <_ i^i ( NN X. NN ) ) /\\ Fun ( f \\ { (/) } ) /\\ dom f C_ ( ... ` x ) ) } $.\n$d f x $."
}