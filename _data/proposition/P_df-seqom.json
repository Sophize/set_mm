{
  "citations" : [ {
    "textCitation" : "[See df-seqom on Metamath](http://us.metamath.org/mpegif/df-seqom.html)"
  } ],
  "names" : [ "df-seqom" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cseqom--1", "#T_cF", "#T_cseqom--2", "#T_cI", "#T_wceq", "#T_crdg--1", "#T_vi", "#T_cmpt2--1", "#T_com", "#T_cmpt2--2", "#T_vv", "#T_cmpt2--3", "#T_cvv", "#T_cmpt2--4", "#T_cop--1", "#T_csuc", "#T_vi", "#T_cop--2", "#T_vi", "#T_cF", "#T_vv", "#T_cop--3", "#T_crdg--2", "#T_cop--1", "#T_c0", "#T_cop--2", "#T_cid", "#T_cfv", "#T_cI", "#T_cop--3", "#T_cima", "#T_com", "#T_cF", "#T_vi", "#T_vv", "#T_cI", "#T_vi", "#T_vv" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Index-aware recursive definitions over ` _om ` .  A mashup of ~ df-rdg and ~ df-seq , this allows for recursive definitions that use an index in the recursion in cases where Infinity is not admitted.  (Contributed by Stefan O'Rear, 1-Nov-2014.) ",
  "statement" : "df-seqom $p |- seqom ( F , I ) = ( rec ( ( i e. _om , v e. _V |-> <. suc i , ( i F v ) >. ) , <. (/) , ( _I ` I ) >. ) \" _om ) $.\n$d F i v $.\n$d I i v $."
}