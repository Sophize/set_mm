{
  "citations" : [ {
    "textCitation" : "[See df-ttg on Metamath](http://us.metamath.org/mpegif/df-ttg.html)"
  } ],
  "names" : [ "df-ttg" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cttg", "#T_wceq", "#T_vw", "#T_cmpt--1", "#T_cvv", "#T_cmpt--2", "#T_csb--1", "#T_vx", "#T_cmpt2--1", "#T_cbs", "#T_cfv", "#T_vw", "#T_cmpt2--2", "#T_vy", "#T_cmpt2--3", "#T_cbs", "#T_cfv", "#T_vw", "#T_cmpt2--4", "#T_crab--1", "#T_vz", "#T_crab--2", "#T_cbs", "#T_cfv", "#T_vw", "#T_crab--3", "#T_wrex--1", "#T_vk", "#T_wrex--2", "#T_cc0", "#T_cicc", "#T_c1", "#T_vz", "#T_csg", "#T_cfv", "#T_vw", "#T_vx", "#T_wceq", "#T_vk", "#T_cvsca", "#T_cfv", "#T_vw", "#T_vy", "#T_csg", "#T_cfv", "#T_vw", "#T_vx", "#T_crab--4", "#T_csb--2", "#T_vi", "#T_csb--3", "#T_vw", "#T_csts", "#T_cop--1", "#T_citv", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_vi", "#T_cop--3", "#T_csts", "#T_cop--1", "#T_clng", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_vx", "#T_cmpt2--1", "#T_cbs", "#T_cfv", "#T_vw", "#T_cmpt2--2", "#T_vy", "#T_cmpt2--3", "#T_cbs", "#T_cfv", "#T_vw", "#T_cmpt2--4", "#T_crab--1", "#T_vz", "#T_crab--2", "#T_cbs", "#T_cfv", "#T_vw", "#T_crab--3", "#T_vz", "#T_wcel", "#T_vx", "#T_vi", "#T_vy", "#T_w3o--1", "#T_vx", "#T_wcel", "#T_vz", "#T_vi", "#T_vy", "#T_w3o--2", "#T_vy", "#T_wcel", "#T_vx", "#T_vi", "#T_vz", "#T_crab--4", "#T_cop--3", "#T_vi", "#T_vk", "#T_vw", "#T_vx", "#T_vy", "#T_vz" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define a function converting a complex Hilbert space to a Tarski Geometry.  It does so by equipping the structure with a betweenness operation.  Note that because the scalar product is applied over the interval ` ( 0 [,] 1 ) ` , only spaces whose scalar field is a superset of that interval can be considered.  (Contributed by Thierry Arnoux, 24-Mar-2019.) ",
  "statement" : "df-ttg $p |- toTG = ( w e. _V |-> [_ ( x e. ( Base ` w ) , y e. ( Base ` w ) |-> { z e. ( Base ` w ) | E. k e. ( 0 [,] 1 ) ( z ( -g ` w ) x ) = ( k ( .s ` w ) ( y ( -g ` w ) x ) ) } ) / i ]_ ( ( w sSet <. ( Itv ` ndx ) , i >. ) sSet <. ( LineG ` ndx ) , ( x e. ( Base ` w ) , y e. ( Base ` w ) |-> { z e. ( Base ` w ) | ( z e. ( x i y ) \\/ x e. ( z i y ) \\/ y e. ( x i z ) ) } ) >. ) ) $.\n$d i k w x y z $."
}