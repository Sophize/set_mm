{
  "citations" : [ {
    "textCitation" : "[See df-iota on Metamath](http://us.metamath.org/mpegif/df-iota.html)"
  } ],
  "names" : [ "df-iota" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cio", "#T_vx", "#T_wph", "#T_wceq", "#T_cuni", "#T_cab--1", "#T_vy", "#T_cab--2", "#T_cab--1", "#T_vx", "#T_cab--2", "#T_wph", "#T_cab--3", "#T_wceq", "#T_csn--1", "#T_vy", "#T_csn--2", "#T_cab--3", "#T_wph", "#T_vy", "#T_vx", "#T_vy" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define Russell's definition description binder, which can be read as \"the unique ` x ` such that ` ph ` ,\" where ` ph ` ordinarily contains ` x ` as a free variable.  Our definition is meaningful only when there is exactly one ` x ` such that ` ph ` is true (see ~ iotaval ); otherwise, it evaluates to the empty set (see ~ iotanul ).  Russell used the inverted iota symbol ` iota ` to represent the binder. Sometimes proofs need to expand an iota-based definition.  That is, given \"X = the x for which ... x ... x ...\" holds, the proof needs to get to \"...  X ...  X ...\".  A general strategy to do this is to use ~ riotacl2 (or ~ iotacl for unbounded iota), as demonstrated in the proof of ~ supub .  This can be easier than applying ~ riotasbc or a version that applies an explicit substitution, because substituting an iota into its own property always has a bound variable clash which must be first renamed or else guarded with NF. (Contributed by Andrew Salmon, 30-Jun-2011.) \n\n---\n\n Define Russell's definition description binder, which can be read as \"the unique ` x ` such that ` ph ` ,\" where ` ph ` ordinarily contains ` x ` as a free variable.  Our definition is meaningful only when there is exactly one ` x ` such that ` ph ` is true (see ~ iotaval ); otherwise, it evaluates to the empty set (see ~ iotanul ).  Russell used the inverted iota symbol ` iota ` to represent the binder. Sometimes proofs need to expand an iota-based definition.  That is, given \"X = the x for which ... x ... x ...\" holds, the proof needs to get to \"...  X ...  X ...\".  A general strategy to do this is to use ~ iotacl (for unbounded iota).  This can be easier than applying a version that applies an explicit substitution, because substituting an iota into its own property always has a bound variable clash which must be first renamed or else guarded with NF. (Contributed by Andrew Salmon, 30-Jun-2011.) ",
  "statement" : "df-iota $p |- ( iota x ph ) = U. { y | { x | ph } = { y } } $.\n$d ph y $.\n$d x y $."
}