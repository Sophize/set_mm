{
  "citations" : [ {
    "textCitation" : "[See dfopab2 on Metamath](http://us.metamath.org/mpegif/dfopab2.html)"
  } ],
  "names" : [ "dfopab2" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_copab--1", "#T_copab--2", "#T_vx", "#T_copab--3", "#T_vy", "#T_copab--4", "#T_copab--5", "#T_wph", "#T_copab--6", "#T_wceq", "#T_crab--1", "#T_vz", "#T_crab--2", "#T_cvv", "#T_cxp", "#T_cvv", "#T_crab--3", "#T_wsbc--1", "#T_c1st", "#T_cfv", "#T_vz", "#T_wsbc--2", "#T_vx", "#T_wsbc--3", "#T_wsbc--1", "#T_c2nd", "#T_cfv", "#T_vz", "#T_wsbc--2", "#T_vy", "#T_wsbc--3", "#T_wph", "#T_crab--4", "#T_wph", "#T_vz", "#T_vx", "#T_vy", "#T_vz" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " A way to define an ordered-pair class abstraction without using existential quantifiers.  (Contributed by NM, 18-Aug-2006.)  (Revised by Mario Carneiro, 31-Aug-2015.) ",
  "statement" : "dfopab2 $p |- { <. x , y >. | ph } = { z e. ( _V X. _V ) | [. ( 1st ` z ) / x ]. [. ( 2nd ` z ) / y ]. ph } $.\n$d ph z $.\n$d x y z $."
}