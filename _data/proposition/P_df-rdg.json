{
  "citations" : [ {
    "textCitation" : "[See df-rdg on Metamath](http://us.metamath.org/mpegif/df-rdg.html)"
  } ],
  "names" : [ "df-rdg" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_crdg--1", "#T_cF", "#T_crdg--2", "#T_cI", "#T_wceq", "#T_crecs", "#T_vg", "#T_cmpt--1", "#T_cvv", "#T_cmpt--2", "#T_cif--1", "#T_vg", "#T_wceq", "#T_c0", "#T_cif--2", "#T_cI", "#T_cif--3", "#T_cif--1", "#T_wlim", "#T_cdm", "#T_vg", "#T_cif--2", "#T_cuni", "#T_crn", "#T_vg", "#T_cif--3", "#T_cF", "#T_cfv", "#T_vg", "#T_cfv", "#T_cuni", "#T_cdm", "#T_vg", "#T_cF", "#T_vg", "#T_cI", "#T_vg" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Define a recursive definition generator on ` On ` (the class of ordinal numbers) with characteristic function ` F ` and initial value ` I ` . This combines functions ` F ` in ~ tfr1 and ` G ` in ~ tz7.44-1 into one definition.  This rather amazing operation allows us to define, with compact direct definitions, functions that are usually defined in textbooks only with indirect self-referencing recursive definitions.  A recursive definition requires advanced metalogic to justify - in particular, eliminating a recursive definition is very difficult and often not even shown in textbooks.  On the other hand, the elimination of a direct definition is a matter of simple mechanical substitution. The price paid is the daunting complexity of our ` rec ` operation (especially when ~ df-recs that it is built on is also eliminated).  But once we get past this hurdle, definitions that would otherwise be recursive become relatively simple, as in for example ~ oav , from which we prove the recursive textbook definition as theorems ~ oa0 , ~ oasuc , and ~ oalim (with the help of theorems ~ rdg0 , ~rdgsuc , and ~ rdglim2a ).  We can also restrict the ` rec ` operation to define otherwise recursive functions on the natural numbers ` _om ` ; see ~ fr0g and ~ frsuc .  Our ` rec ` operation apparently does not appear in published literature, although closely related is Definition 25.2 of [Quine] p. 177, which he uses to \"turn...a recursion into a genuine or direct definition\" (p. 174).  Note that the ` if ` operations (see ~ df-if ) select cases based on whether the domain of ` g ` is zero, a successor, or a limit ordinal. An important use of this definition is in the recursive sequence generator ~ df-seq on the natural numbers (as a subset of the complex numbers), allowing us to define, with direct definitions, recursive infinite sequences such as the factorial function ~ df-fac and integer powers ~ df-exp . _Note:  We introduce_ ` rec ` _with the philosophical goal of being_ _able to eliminate all definitions with direct mechanical substitution_ _and to verify easily the soundness of definitions.  Metamath itself_ _has no built-in technical limitation that prevents multiple-part_ _recursive definitions in the traditional textbook style_.  (Contributed by NM, 9-Apr-1995.)  (Revised by Mario Carneiro, 9-May-2015.) ",
  "statement" : "df-rdg $p |- rec ( F , I ) = recs ( ( g e. _V |-> if ( g = (/) , I , if ( Lim dom g , U. ran g , ( F ` ( g ` U. dom g ) ) ) ) ) ) $.\n$d F g $.\n$d I g $."
}