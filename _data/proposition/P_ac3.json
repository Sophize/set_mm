{
  "citations" : [ {
    "textCitation" : "[See ac3 on Metamath](http://us.metamath.org/mpegif/ac3.html)"
  } ],
  "names" : [ "ac3" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wex", "#T_vy", "#T_wral--1", "#T_vz", "#T_wral--2", "#T_vx", "#T_vz", "#T_wne", "#T_c0", "#T_wi", "#T_wreu--1", "#T_vw", "#T_wreu--2", "#T_vz", "#T_wrex--1", "#T_vv", "#T_wrex--2", "#T_vy", "#T_vz", "#T_wcel", "#T_vv", "#T_wa", "#T_vw", "#T_wcel", "#T_vv", "#T_vv", "#T_vw", "#T_vx", "#T_vy", "#T_vz" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Axiom of Choice using abbreviations.  The logical equivalence to ~ ax-ac can be established by chaining ~ aceq0 and ~ aceq2 .  A standard textbook version of AC is derived from this one in ~ dfac2a , and this version of AC is derived from the textbook version in ~ dfac2 . The following sketch will help you understand this version of the axiom.  Given any set ` x ` , the axiom says that there exists a ` y ` that is a collection of unordered pairs, one pair for each nonempty member of ` x ` .  One entry in the pair is the member of ` x ` , and the other entry is some arbitrary member of that member of ` x ` . Using the Axiom of Regularity, we can show that ` y ` is really a set of _ordered_ pairs, very similar to the ordered pair construction ~ opthreg .  The key theorem for this (used in the proof of ~ dfac2 ) is ~ preleq .  With this modified definition of ordered pair, it can be seen that ` y ` is actually a choice function on the members of ` x ` . For example, suppose ` x = { { 1 , 2 } , { 1 , 3 } , { 2 , 3 , 4 } } ` .  Let us try ` y = { { { 1 , 2 } , 1 } , { { 1 , 3 } , 1 } , ` ` { { 2 , 3 , 4 } , 2 } } ` .  For the member (of ` x ` ) ` z = { 1 , 2 } ` , the only assignment to ` w ` and ` v ` that satisfies the axiom is ` w = 1 ` and ` v = { { 1 , 2 } , 1 } ` , so there is exactly one ` w ` as required.  We verify the other two members of ` x ` similarly.  Thus, ` y ` satisfies the axiom.  Using our modified ordered pair definition, we can say that ` y ` corresponds to the choice function ` { <. { 1 , 2 } , 1 >. , <. { 1 , 3 } , 1 >. , ` ` <. { 2 , 3 , 4 } , 2 >. } ` .  Of course other choices for ` y ` will also satisfy the axiom, for example ` y = { { { 1 , 2 } , 2 } , { { 1 , 3 } , 1 } , ` ` { { 2 , 3 , 4 } , 4 } } ` .  What AC tells us is that there exists at least one such ` y ` , but it doesn't tell us which one. (New usage is discouraged.)  (Contributed by NM, 19-Jul-1996.) ",
  "statement" : "ac3 $p |- E. y A. z e. x ( z =/= (/) -> E! w e. z E. v e. y ( z e. v /\\ w e. v ) ) $.\n$d v w x y z $."
}