{
  "citations" : [ {
    "textCitation" : "[See elnn0rabdioph on Metamath](http://us.metamath.org/mpegif/elnn0rabdioph.html)"
  } ],
  "names" : [ "elnn0rabdioph" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cN", "#T_wcel", "#T_cn0", "#T_wa", "#T_vt", "#T_cmpt--1", "#T_cz", "#T_cmap", "#T_c1", "#T_cfz", "#T_cN", "#T_cmpt--2", "#T_cA", "#T_wcel", "#T_cmzp", "#T_cfv", "#T_c1", "#T_cfz", "#T_cN", "#T_wi", "#T_crab--1", "#T_vt", "#T_crab--2", "#T_cn0", "#T_cmap", "#T_c1", "#T_cfz", "#T_cN", "#T_crab--3", "#T_cA", "#T_wcel", "#T_cn0", "#T_crab--4", "#T_wcel", "#T_cdioph", "#T_cfv", "#T_cN", "#T_cN", "#T_vt" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Diophantine set builder for nonnegativity constraints.  The first builder which uses a witness variable internally; an expression is nonnegative if there is a nonnegative integer equal to it.  (Contributed by Stefan O'Rear, 11-Oct-2014.) ",
  "statement" : "elnn0rabdioph $p |- ( ( N e. NN0 /\\ ( t e. ( ZZ ^m ( 1 ... N ) ) |-> A ) e. ( mzPoly ` ( 1 ... N ) ) ) -> { t e. ( NN0 ^m ( 1 ... N ) ) | A e. NN0 } e. ( Dioph ` N ) ) $.\n$d N t $."
}