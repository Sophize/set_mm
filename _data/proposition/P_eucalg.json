{
  "citations" : [ {
    "textCitation" : "[See eucalg on Metamath](http://us.metamath.org/mpegif/eucalg.html)"
  } ],
  "indexable" : true,
  "names" : [ "Greatest Common Divisor Algorithm", "eucalg" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cE", "#T_wceq", "#T_vx", "#T_cmpt2--1", "#T_cn0", "#T_cmpt2--2", "#T_vy", "#T_cmpt2--3", "#T_cn0", "#T_cmpt2--4", "#T_cif--1", "#T_vy", "#T_wceq", "#T_cc0", "#T_cif--2", "#T_cop--1", "#T_vx", "#T_cop--2", "#T_vy", "#T_cop--3", "#T_cif--3", "#T_cop--1", "#T_vy", "#T_cop--2", "#T_vx", "#T_cmo", "#T_vy", "#T_cop--3", "#T_cR", "#T_wceq", "#T_cseq--1", "#T_cc0", "#T_cE", "#T_ccom", "#T_c1st", "#T_cseq--2", "#T_cn0", "#T_cxp", "#T_csn--1", "#T_cA", "#T_csn--2", "#T_cA", "#T_wceq", "#T_cop--1", "#T_cM", "#T_cop--2", "#T_cN", "#T_cop--3", "#T_cM", "#T_wcel", "#T_cn0", "#T_wa", "#T_cN", "#T_wcel", "#T_cn0", "#T_wi", "#T_c1st", "#T_cfv", "#T_cR", "#T_cfv", "#T_cN", "#T_wceq", "#T_cM", "#T_cgcd", "#T_cN", "#T_cA", "#T_vx", "#T_vy", "#T_cM", "#T_vx", "#T_vy", "#T_cN", "#T_vx", "#T_vy", "#T_cR", "#T_vx", "#T_vx", "#T_vy" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Euclid's Algorithm computes the greatest common divisor of two nonnegative integers by repeatedly replacing the larger of them with its remainder modulo the smaller until the remainder is 0. Upon halting, the 1st member of the final state ` ( R `` N ) ` is equal to the gcd of the values comprising the input state ` <. M , N >. ` . This is Metamath 100 proof #69 (greatest common divisor algorithm). (Contributed by Paul Chapman, 31-Mar-2011.)  (Proof shortened by Mario Carneiro, 29-May-2014.) ",
  "statement" : "eucalgval.1 $e |- E = ( x e. NN0 , y e. NN0 |-> if ( y = 0 , <. x , y >. , <. y , ( x mod y ) >. ) ) $.\neucalg.2 $e |- R = seq 0 ( ( E o. 1st ) , ( NN0 X. { A } ) ) $.\neucalg.3 $e |- A = <. M , N >. $.\neucalg $p |- ( ( M e. NN0 /\\ N e. NN0 ) -> ( 1st ` ( R ` N ) ) = ( M gcd N ) ) $.\n$d A x y $.\n$d M x y $.\n$d N x y $.\n$d R x $.\n$d x y $."
}