{
  "citations" : [ {
    "textCitation" : "[See ccatopth on Metamath](http://us.metamath.org/mpegif/ccatopth.html)"
  } ],
  "names" : [ "ccatopth" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_cA", "#T_wcel", "#T_cword", "#T_cX", "#T_wa", "#T_cB", "#T_wcel", "#T_cword", "#T_cX", "#T_w3a--1", "#T_cC", "#T_wcel", "#T_cword", "#T_cX", "#T_wa", "#T_cD", "#T_wcel", "#T_cword", "#T_cX", "#T_w3a--2", "#T_chash", "#T_cfv", "#T_cA", "#T_wceq", "#T_chash", "#T_cfv", "#T_cC", "#T_wi", "#T_cA", "#T_cconcat", "#T_cB", "#T_wceq", "#T_cC", "#T_cconcat", "#T_cD", "#T_wb", "#T_cA", "#T_wceq", "#T_cC", "#T_wa", "#T_cB", "#T_wceq", "#T_cD" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " An ~ opth -like theorem for recovering the two halves of a concatenated word.  (Contributed by Mario Carneiro, 1-Oct-2015.) ",
  "statement" : "ccatopth $p |- ( ( ( A e. Word X /\\ B e. Word X ) /\\ ( C e. Word X /\\ D e. Word X ) /\\ ( # ` A ) = ( # ` C ) ) -> ( ( A ++ B ) = ( C ++ D ) <-> ( A = C /\\ B = D ) ) ) $."
}