{
  "citations" : [ {
    "textCitation" : "[See ex-natded9.26 on Metamath](http://us.metamath.org/mpegif/ex-natded9.26.html)"
  } ],
  "names" : [ "ex-natded9.26" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wph", "#T_wi", "#T_wex", "#T_vx", "#T_wal", "#T_vy", "#T_wps", "#T_wph", "#T_wi", "#T_wal", "#T_vy", "#T_wex", "#T_vx", "#T_wps", "#T_wph", "#T_vx", "#T_vy" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " Theorem 9.26 of [Clemente] p. 45, translated line by line using an interpretation of natural deduction in Metamath.  This proof has some additional complications due to the fact that Metamath's existential elimination rule does not change bound variables, so we need to verify that ` x ` is bound in the conclusion. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>3</TD><TD NOWRAP> ` E. x A. y ps ( x , y ) ` </TD> <TD NOWRAP> ` ( ph -> E. x A. y ps ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>2</TD><TD>6</TD><TD NOWRAP> ...| ` A. y ps ( x , y ) ` </TD> <TD NOWRAP> ` ( ( ph /\\ A. y ps ) -> A. y ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD>~ simpr . Later statements will have this scope.</TD></TR> <TR><TD>3</TD><TD>7;5,4</TD><TD> ... ` ps ( x , y ) ` </TD> <TD> ` ( ( ph /\\ A. y ps ) -> ps ) ` </TD> <TD> ` A. `E 2,y </TD> <TD> ~ spsbcd (` A. `E), 5,6. To use it we need ~ a1i and ~ vex . This could be immediately done with ~ 19.21bi , but we want to show the general approach for substitution. </TD></TR> <TR><TD>4</TD><TD>12;8,9,10,11</TD><TD> ... ` E. x ps ( x , y ) ` </TD> <TD> ` ( ( ph /\\ A. y ps ) -> E. x ps ) ` </TD> <TD> ` E. `I 3,a</TD> <TD> ~ spesbcd (` E. `I), 11. To use it we need ~ sylibr , which in turn requires ~ sylib and two uses of ~ sbcid . This could be more immediately done using ~ 19.8a , but we want to show the general approach for substitution. </TD></TR> <TR><TD>5</TD><TD>13;1,2</TD><TD> ` E. x ps ( x , y ) ` </TD> <TD> ` ( ph -> E. x ps ) ` </TD><TD> ` E. `E 1,2,4,a</TD> <TD> ~ exlimdd (` E. `E), 1,2,3,12. We'll need supporting assertions that the variable is free (not bound), as provided in ~ nfv and ~ nfe1 (MPE# 1,2)</TD></TR> </TR> <TR><TD>6</TD><TD>14</TD><TD> ` A. y E. x ps ( x , y ) ` </TD> <TD> ` ( ph -> A. y E. x ps ) ` </TD> <TD> ` A. `I 5</TD> <TD> ~ alrimiv (` A. `I), 13</TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. Below is the final metamath proof (which reorders some steps). Note that in the original proof, ` ps ( x , y ) ` has explicit parameters.  In Metamath, these parameters are always implicit, and the parameters upon which a wff variable can depend are recorded in the \"allowed substitution hints\" below. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded9.26-2 . (Proof modification is discouraged.)  (New usage is discouraged.) (Contributed by Mario Carneiro, 9-Feb-2017.) (Revised by David A. Wheeler, 18-Feb-2017.) ",
  "statement" : "ex-natded9.26.1 $e |- ( ph -> E. x A. y ps ) $.\nex-natded9.26 $p |- ( ph -> A. y E. x ps ) $.\n$d ph x y $."
}