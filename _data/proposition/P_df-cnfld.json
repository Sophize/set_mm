{
  "citations" : [ {
    "textCitation" : "[See df-cnfld on Metamath](http://us.metamath.org/mpegif/df-cnfld.html)"
  } ],
  "names" : [ "df-cnfld" ],
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_ccnfld", "#T_wceq", "#T_ctp--1", "#T_cop--1", "#T_cbs", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cc", "#T_cop--3", "#T_ctp--2", "#T_cop--1", "#T_cplusg", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_caddc", "#T_cop--3", "#T_ctp--3", "#T_cop--1", "#T_cmulr", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cmul", "#T_cop--3", "#T_ctp--4", "#T_cun", "#T_csn--1", "#T_cop--1", "#T_cstv", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_ccj", "#T_cop--3", "#T_csn--2", "#T_cun", "#T_ctp--1", "#T_cop--1", "#T_cts", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cmopn", "#T_cfv", "#T_cabs", "#T_ccom", "#T_cmin", "#T_cop--3", "#T_ctp--2", "#T_cop--1", "#T_cple", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cle", "#T_cop--3", "#T_ctp--3", "#T_cop--1", "#T_cds", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cabs", "#T_ccom", "#T_cmin", "#T_cop--3", "#T_ctp--4", "#T_cun", "#T_csn--1", "#T_cop--1", "#T_cunif", "#T_cfv", "#T_cnx", "#T_cop--2", "#T_cmetu", "#T_cfv", "#T_cabs", "#T_ccom", "#T_cmin", "#T_cop--3", "#T_csn--2" ],
  "metaLanguage" : "METAMATH",
  "remarks" : " The field of complex numbers.  Other number fields and rings can be constructed by applying the ` |``s ` restriction operator, for instance ` ( CCfld |`` AA ) ` is the field of algebraic numbers. The contract of this set is defined entirely by ~ cnfldex , ~ cnfldadd , ~ cnfldmul , ~ cnfldcj , ~ cnfldtset , ~ cnfldle , ~ cnfldds , and ~ cnfldbas .  We may add additional members to this in the future. (Contributed by Stefan O'Rear, 27-Nov-2014.)  (Revised by Thierry Arnoux, 15-Dec-2017.)  (New usage is discouraged.) ",
  "statement" : "df-cnfld $p |- CCfld = ( ( { <. ( Base ` ndx ) , CC >. , <. ( +g ` ndx ) , + >. , <. ( .r ` ndx ) , x. >. } u. { <. ( *r ` ndx ) , * >. } ) u. ( { <. ( TopSet ` ndx ) , ( MetOpen ` ( abs o. - ) ) >. , <. ( le ` ndx ) , <_ >. , <. ( dist ` ndx ) , ( abs o. - ) >. } u. { <. ( UnifSet ` ndx ) , ( metUnif ` ( abs o. - ) ) >. } ) ) $."
}