{
  "contributor": {
    "handle": "abc"
  },
  "names": [
    "Metamath Automation Framework"
  ],
  "indexable": true,
  "abstractText": "Towards building a general automation framework for Metamath",
  "description": "### Introduction\nThis project is aimed at developing an automation framework for the Metamath language. [This survey](https://docs.google.com/forms/d/10w1sF3HsWpI4H0TOwPWuT_JKUawuTxpQZS3-1Oom5eQ/viewanalytics) helped us understand the interests and expectations of the community for this project.\n\nAccordingly, we have decided that the goals of the framework being developed are two-fold:\n* To aid proof-assistants with the development of proofs.\n* To enable easy creation formal-proofs calculators for statements like $18+7=25$ and $73 \\in \\mathbb{P}$\n\nWe hope that this work will help make Metamath more convenient to use for non-experts and make it more practical for real-world use cases like developing knowledge engines for learners and use in critical systems. However, this is not an explicit goal, and our discussion will be focussed only on the above two stated goals.\n\n### Interface\nWhile we are looking for multiple proposals on the implementation design of this framework, I think we will be able to all agree on a single input-output interface (API) for this framework. Go to the #metamath/J_automation/interface page for more information and discussions.\n\n### Proposals\nYou can find all the design proposals for the framework under the '#metamath/J_automation/proposals' page. The following is the current list of proposals:\n\n* #metamath/J_automation/proposal1 by Abhishek Chugh\n* #metamath/J_automation/proposal2\n\n### Contributing\nTake a look at the #metamath/J_automation/help page to see various features of this platform. Since this is a new platform, you will encounter some problems. Please put in your issues/comments/suggestions in the comment section. We will fix urgent issues ASAP.\n\n### License\nIn line with the spirit of most Metamath contributions, all data/discussions related to this project are released in the public domain (CC0). Any code that comes out of this effort will be open-source. Based on code dependencies and agreement of the participants, the software will use either the permissive MIT license or the copyleft GNU GPL license."
}