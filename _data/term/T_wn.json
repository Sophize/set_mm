{
  "citations" : [ {
    "textCitation" : "[See wn on Metamath](http://us.metamath.org/mpegif/wn.html)"
  } ],
  "definition" : "wff -. ph",
  "language" : "METAMATH_SET_MM",
  "lookupTerms" : [ "#T_wn", "#T_wph" ],
  "metaLanguage" : "METAMATH",
  "phrase" : "-.",
  "remarks" : " If ` ph ` is a wff, so is ` -. ph ` or \"not ` ph ` .\"  Part of the recursive definition of a wff (well-formed formula).  In classical logic (which is our logic), a wff is interpreted as either true or false.  So if ` ph ` is true, then ` -. ph ` is false; if ` ph ` is false, then ` -. ph ` is true.  Traditionally, Greek letters are used to represent wffs, and we follow this convention.  In propositional calculus, we define only wffs built up from other wffs, i.e. there is no starting or \"atomic\" wff.  Later, in predicate calculus, we will extend the basic wff definition by including atomic wffs ( ~ weq and ~ wel ). \n\n--- If ` ph ` is a wff, so is ` -. ph ` or \"not ` ph ` .\"  Part of the recursive definition of a wff (well-formed formula).  Traditionally, Greek letters are used to represent wffs, and we follow this convention.  In propositional calculus, we define only wffs built up from other wffs, i.e. there is no starting or \"atomic\" wff.  Later, in predicate calculus, we will extend the basic wff definition by including atomic wffs ( ~ weq and ~ wel ). \n\n---\n\n---\n\nThis syntax is primitive. It may be defined by the following axioms: \n#P_ax-3|NAV_LINK|HIDE_TVI\n#P_ax-in1|NAV_LINK|HIDE_TVI\n"
}